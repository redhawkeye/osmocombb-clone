   1              		.file	"rtc.c"
   9              	.Ltext0:
  10              		.cfi_sections	.debug_frame
  11              		.section	.text.rtc_irq_tick,"ax",%progbits
  12              		.align	2
  14              	rtc_irq_tick:
  15              	.LFB0:
  16              		.file 1 "calypso/rtc.c"
   1:calypso/rtc.c **** /* Driver for Calypso RTC controller */
   2:calypso/rtc.c **** 
   3:calypso/rtc.c **** /* (C) 2010 by Harald Welte <laforge@gnumonks.org>
   4:calypso/rtc.c ****  *
   5:calypso/rtc.c ****  * All Rights Reserved
   6:calypso/rtc.c ****  *
   7:calypso/rtc.c ****  * This program is free software; you can redistribute it and/or modify
   8:calypso/rtc.c ****  * it under the terms of the GNU General Public License as published by
   9:calypso/rtc.c ****  * the Free Software Foundation; either version 2 of the License, or
  10:calypso/rtc.c ****  * (at your option) any later version.
  11:calypso/rtc.c ****  *
  12:calypso/rtc.c ****  * This program is distributed in the hope that it will be useful,
  13:calypso/rtc.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:calypso/rtc.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:calypso/rtc.c ****  * GNU General Public License for more details.
  16:calypso/rtc.c ****  *
  17:calypso/rtc.c ****  * You should have received a copy of the GNU General Public License along
  18:calypso/rtc.c ****  * with this program; if not, write to the Free Software Foundation, Inc.,
  19:calypso/rtc.c ****  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  20:calypso/rtc.c ****  *
  21:calypso/rtc.c ****  */
  22:calypso/rtc.c **** 
  23:calypso/rtc.c **** #include <stdint.h>
  24:calypso/rtc.c **** #include <stdio.h>
  25:calypso/rtc.c **** 
  26:calypso/rtc.c **** #include <defines.h>
  27:calypso/rtc.c **** #include <debug.h>
  28:calypso/rtc.c **** #include <memory.h>
  29:calypso/rtc.c **** #include <calypso/irq.h>
  30:calypso/rtc.c **** 
  31:calypso/rtc.c **** #define BASE_ADDR_RTC	0xfffe1800
  32:calypso/rtc.c **** #define RTC_REG(x)	((void *)BASE_ADDR_RTC + (x))
  33:calypso/rtc.c **** 
  34:calypso/rtc.c **** enum rtc_reg {
  35:calypso/rtc.c **** 	SECOND_REG		= 0x00,
  36:calypso/rtc.c **** 	MINUTES_REG		= 0x01,
  37:calypso/rtc.c **** 	HOURS_REG		= 0x02,
  38:calypso/rtc.c **** 	DAYS_REG		= 0x03,
  39:calypso/rtc.c **** 	MONTHS_REG		= 0x04,
  40:calypso/rtc.c **** 	YEARS_REG		= 0x05,
  41:calypso/rtc.c **** 	WEEK_REG		= 0x06,
  42:calypso/rtc.c **** 	/* reserved */
  43:calypso/rtc.c **** 	ALARM_SECOND_REG	= 0x08,
  44:calypso/rtc.c **** 	ALARM_MINUTES_REG	= 0x09,
  45:calypso/rtc.c **** 	ALARM_HOURS_REG		= 0x0a,
  46:calypso/rtc.c **** 	ALARM_DAYS_REG		= 0x0b,
  47:calypso/rtc.c **** 	ALARM_MONTHS_REG	= 0x0c,
  48:calypso/rtc.c **** 	ALARM_YEARS_REG		= 0x0d,
  49:calypso/rtc.c **** 	/* reserved */
  50:calypso/rtc.c **** 	/* reserved */
  51:calypso/rtc.c **** 	CTRL_REG		= 0x10,
  52:calypso/rtc.c **** 	STATUS_REG		= 0x11,
  53:calypso/rtc.c **** 	INT_REG			= 0x12,
  54:calypso/rtc.c **** 	COMP_LSB_REG		= 0x13,
  55:calypso/rtc.c **** 	COMP_MSB_REG		= 0x14,
  56:calypso/rtc.c **** 	RES_PROG_REG		= 0x15,
  57:calypso/rtc.c **** };
  58:calypso/rtc.c **** 
  59:calypso/rtc.c **** static int tick_ctr;
  60:calypso/rtc.c **** 
  61:calypso/rtc.c **** static void rtc_irq_tick(__unused enum irq_nr nr)
  62:calypso/rtc.c **** {
  17              		.loc 1 62 0
  18              		.cfi_startproc
  19              		@ args = 0, pretend = 0, frame = 0
  20              		@ frame_needed = 0, uses_anonymous_args = 0
  21              		@ link register save eliminated.
  22              	.LVL0:
  63:calypso/rtc.c **** 	tick_ctr++;
  23              		.loc 1 63 0
  24 0000 0C309FE5 		ldr	r3, .L2
  25 0004 002093E5 		ldr	r2, [r3, #0]
  26 0008 012082E2 		add	r2, r2, #1
  27 000c 002083E5 		str	r2, [r3, #0]
  64:calypso/rtc.c **** }
  28              		.loc 1 64 0
  29 0010 1EFF2FE1 		bx	lr
  30              	.L3:
  31              		.align	2
  32              	.L2:
  33 0014 00000000 		.word	.LANCHOR0
  34              		.cfi_endproc
  35              	.LFE0:
  37              		.section	.text.rtc_init,"ax",%progbits
  38              		.align	2
  39              		.global	rtc_init
  41              	rtc_init:
  42              	.LFB1:
  65:calypso/rtc.c **** 
  66:calypso/rtc.c **** void rtc_init(void)
  67:calypso/rtc.c **** {
  43              		.loc 1 67 0
  44              		.cfi_startproc
  45              		@ args = 0, pretend = 0, frame = 0
  46              		@ frame_needed = 0, uses_anonymous_args = 0
  47 0000 04E02DE5 		str	lr, [sp, #-4]!
  48              	.LCFI0:
  49              		.cfi_def_cfa_offset 4
  68:calypso/rtc.c **** 	irq_register_handler(IRQ_RTC_TIMER, &rtc_irq_tick);
  50              		.loc 1 68 0
  51 0004 0900A0E3 		mov	r0, #9
  52 0008 3C109FE5 		ldr	r1, .L5
  53              		.cfi_offset 14, -4
  54 000c FEFFFFEB 		bl	irq_register_handler
  69:calypso/rtc.c **** 	irq_config(IRQ_RTC_TIMER, 0, 1, 0);
  55              		.loc 1 69 0
  56 0010 0010A0E3 		mov	r1, #0
  57 0014 0120A0E3 		mov	r2, #1
  58 0018 0130A0E1 		mov	r3, r1
  59 001c 0900A0E3 		mov	r0, #9
  60 0020 FEFFFFEB 		bl	irq_config
  70:calypso/rtc.c **** 	irq_enable(IRQ_RTC_TIMER);
  61              		.loc 1 70 0
  62 0024 0900A0E3 		mov	r0, #9
  63 0028 FEFFFFEB 		bl	irq_enable
  71:calypso/rtc.c **** 
  72:calypso/rtc.c **** 	/* clear power-up reset */
  73:calypso/rtc.c **** 	writeb(0x80, RTC_REG(STATUS_REG));
  64              		.loc 1 73 0
  65 002c 1C309FE5 		ldr	r3, .L5+4
  66 0030 7F20E0E3 		mvn	r2, #127
  67 0034 EE2043E5 		strb	r2, [r3, #-238]
  74:calypso/rtc.c **** 	/* enable RTC running */
  75:calypso/rtc.c **** 	writeb(0x01, RTC_REG(CTRL_REG));
  68              		.loc 1 75 0
  69 0038 812082E2 		add	r2, r2, #129
  70 003c EF2043E5 		strb	r2, [r3, #-239]
  76:calypso/rtc.c **** 	/* enable periodic interrupts every second */
  77:calypso/rtc.c **** 	writeb(0x04, RTC_REG(INT_REG));
  71              		.loc 1 77 0
  72 0040 032082E2 		add	r2, r2, #3
  73 0044 ED2043E5 		strb	r2, [r3, #-237]
  78:calypso/rtc.c **** }
  74              		.loc 1 78 0
  75 0048 04F09DE4 		ldr	pc, [sp], #4
  76              	.L6:
  77              		.align	2
  78              	.L5:
  79 004c 00000000 		.word	rtc_irq_tick
  80 0050 FF18FEFF 		.word	-124673
  81              		.cfi_endproc
  82              	.LFE1:
  84              		.bss
  85              		.align	2
  86              		.set	.LANCHOR0,. + 0
  89              	tick_ctr:
  90 0000 00000000 		.space	4
  91              		.text
  92              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 rtc.c
     /tmp/ccAPCTR8.s:12     .text.rtc_irq_tick:0000000000000000 $a
     /tmp/ccAPCTR8.s:14     .text.rtc_irq_tick:0000000000000000 rtc_irq_tick
     /tmp/ccAPCTR8.s:33     .text.rtc_irq_tick:0000000000000014 $d
     /tmp/ccAPCTR8.s:38     .text.rtc_init:0000000000000000 $a
     /tmp/ccAPCTR8.s:41     .text.rtc_init:0000000000000000 rtc_init
     /tmp/ccAPCTR8.s:79     .text.rtc_init:000000000000004c $d
     /tmp/ccAPCTR8.s:85     .bss:0000000000000000 $d
     /tmp/ccAPCTR8.s:89     .bss:0000000000000000 tick_ctr
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
irq_register_handler
irq_config
irq_enable
