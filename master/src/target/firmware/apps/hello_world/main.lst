   1              		.file	"main.c"
   9              	.Ltext0:
  10              		.cfi_sections	.debug_frame
  11              		.section	.text.fb_putstr,"ax",%progbits
  12              		.align	2
  14              	fb_putstr:
  15              	.LFB53:
  16              		.file 1 "include/fb/framebuffer.h"
   1:include/fb/framebuffer.h **** #ifndef _FB_FRAMEBUFFER_H
   2:include/fb/framebuffer.h **** #define _FB_FRAMEBUFFER_H
   3:include/fb/framebuffer.h **** 
   4:include/fb/framebuffer.h **** #include <fb/font.h>
   5:include/fb/framebuffer.h **** #include <stdint.h>
   6:include/fb/framebuffer.h **** 
   7:include/fb/framebuffer.h **** /* color is encoded as <special><red><green><blue> */
   8:include/fb/framebuffer.h **** /* if a color is "special", then the RGB components most likely
   9:include/fb/framebuffer.h ****    don't make sense. Use "special" colours when you have to
  10:include/fb/framebuffer.h ****    mask out bits with transparency or you have to encode
  11:include/fb/framebuffer.h ****    colours in a fixed color palette... */
  12:include/fb/framebuffer.h **** 
  13:include/fb/framebuffer.h **** #define FB_COLOR_WHITE		0x00ffffffU
  14:include/fb/framebuffer.h **** #define FB_COLOR_BLACK		0x00000000U
  15:include/fb/framebuffer.h **** #define FB_COLOR_TRANSP		0x01ffffffU
  16:include/fb/framebuffer.h **** 
  17:include/fb/framebuffer.h **** #define FB_COLOR_RGB(r,g,b) ((((r) & 0xff)<<16)|(((g)&0xff)<<8)|((b)&0xff))
  18:include/fb/framebuffer.h **** #define FB_COLOR_RED		FB_COLOR_RGB(0xff,0x00,0x00)
  19:include/fb/framebuffer.h **** #define FB_COLOR_GREEN		FB_COLOR_RGB(0x00,0xff,0x00)
  20:include/fb/framebuffer.h **** #define FB_COLOR_BLUE		FB_COLOR_RGB(0x00,0x00,0xff)
  21:include/fb/framebuffer.h **** 
  22:include/fb/framebuffer.h **** /* encode */
  23:include/fb/framebuffer.h **** 
  24:include/fb/framebuffer.h **** /* decode */
  25:include/fb/framebuffer.h **** #define FB_COLOR_IS_SPECIAL(v)     (!!((v) & 0xff000000U))
  26:include/fb/framebuffer.h **** #define FB_COLOR_TO_R(v)		(((v)>>16) & 0xff)
  27:include/fb/framebuffer.h **** #define FB_COLOR_TO_G(v)		(((v)>> 8) & 0xff)
  28:include/fb/framebuffer.h **** #define FB_COLOR_TO_B(v)		( (v)      & 0xff)
  29:include/fb/framebuffer.h **** 
  30:include/fb/framebuffer.h **** struct framebuffer {
  31:include/fb/framebuffer.h **** 	char name[8];				// keep it short!
  32:include/fb/framebuffer.h **** 	void (*init)();				// (re)initialize
  33:include/fb/framebuffer.h **** 	void (*clear)();			// clear display
  34:include/fb/framebuffer.h **** 	void (*boxto)(uint16_t x,uint16_t y);	// draw box to xy
  35:include/fb/framebuffer.h **** 	void (*lineto)(uint16_t x,uint16_t y);	// draw line to xy
  36:include/fb/framebuffer.h **** 	int (*putstr)(char *c,int maxwidth);	// put text in current font to fb
  37:include/fb/framebuffer.h **** 	void (*flush)();			// flush changes
  38:include/fb/framebuffer.h **** 
  39:include/fb/framebuffer.h **** 	uint16_t width,height;			// width/height of fb
  40:include/fb/framebuffer.h **** 	uint16_t cursor_x,cursor_y;		// current cursor
  41:include/fb/framebuffer.h **** 	uint32_t fg_color,bg_color;		// current fg/bg color
  42:include/fb/framebuffer.h **** 	enum fb_font_id font;			// current font
  43:include/fb/framebuffer.h **** };
  44:include/fb/framebuffer.h **** 
  45:include/fb/framebuffer.h **** /* there is a single framebuffer, the specific driver defines
  46:include/fb/framebuffer.h ****    the "framebuffer" symbol */
  47:include/fb/framebuffer.h **** extern struct framebuffer *framebuffer;
  48:include/fb/framebuffer.h **** 
  49:include/fb/framebuffer.h **** static inline void
  50:include/fb/framebuffer.h **** fb_init(){
  51:include/fb/framebuffer.h **** 	framebuffer->init();
  52:include/fb/framebuffer.h **** }
  53:include/fb/framebuffer.h **** 
  54:include/fb/framebuffer.h **** static inline void
  55:include/fb/framebuffer.h **** fb_clear(){
  56:include/fb/framebuffer.h **** 	framebuffer->clear();
  57:include/fb/framebuffer.h **** }
  58:include/fb/framebuffer.h **** 
  59:include/fb/framebuffer.h **** static inline void
  60:include/fb/framebuffer.h **** fb_boxto(uint16_t x,uint16_t y){
  61:include/fb/framebuffer.h **** 	framebuffer->boxto(x,y);
  62:include/fb/framebuffer.h **** }
  63:include/fb/framebuffer.h **** 
  64:include/fb/framebuffer.h **** static inline void
  65:include/fb/framebuffer.h **** fb_lineto(uint16_t x,uint16_t y){
  66:include/fb/framebuffer.h **** 	framebuffer->lineto(x,y);
  67:include/fb/framebuffer.h **** }
  68:include/fb/framebuffer.h **** 
  69:include/fb/framebuffer.h **** static inline int
  70:include/fb/framebuffer.h **** fb_putstr(char *str,int maxwidth){
  17              		.loc 1 70 0
  18              		.cfi_startproc
  19              		@ args = 0, pretend = 0, frame = 0
  20              		@ frame_needed = 0, uses_anonymous_args = 0
  21              	.LVL0:
  71:include/fb/framebuffer.h **** 	return framebuffer->putstr(str,maxwidth);
  22              		.loc 1 71 0
  23 0000 10309FE5 		ldr	r3, .L2
  70:include/fb/framebuffer.h **** fb_putstr(char *str,int maxwidth){
  24              		.loc 1 70 0
  25 0004 04E02DE5 		str	lr, [sp, #-4]!
  26              	.LCFI0:
  27              		.cfi_def_cfa_offset 4
  28              		.loc 1 71 0
  29 0008 003093E5 		ldr	r3, [r3, #0]
  30              		.cfi_offset 14, -4
  31 000c 0FE0A0E1 		mov	lr, pc
  32 0010 18F093E5 		ldr	pc, [r3, #24]
  33              	.LVL1:
  72:include/fb/framebuffer.h **** }
  34              		.loc 1 72 0
  35 0014 04F09DE4 		ldr	pc, [sp], #4
  36              	.L3:
  37              		.align	2
  38              	.L2:
  39 0018 00000000 		.word	framebuffer
  40              		.cfi_endproc
  41              	.LFE53:
  43              		.section	.text.fb_flush,"ax",%progbits
  44              		.align	2
  46              	fb_flush:
  47              	.LFB54:
  73:include/fb/framebuffer.h **** 
  74:include/fb/framebuffer.h **** static inline void
  75:include/fb/framebuffer.h **** fb_flush(){
  48              		.loc 1 75 0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  76:include/fb/framebuffer.h **** 	framebuffer->flush();
  52              		.loc 1 76 0
  53 0000 10309FE5 		ldr	r3, .L5
  75:include/fb/framebuffer.h **** fb_flush(){
  54              		.loc 1 75 0
  55 0004 04E02DE5 		str	lr, [sp, #-4]!
  56              	.LCFI1:
  57              		.cfi_def_cfa_offset 4
  58              		.loc 1 76 0
  59 0008 003093E5 		ldr	r3, [r3, #0]
  60              		.cfi_offset 14, -4
  61 000c 0FE0A0E1 		mov	lr, pc
  62 0010 1CF093E5 		ldr	pc, [r3, #28]
  77:include/fb/framebuffer.h **** }
  63              		.loc 1 77 0
  64 0014 04F09DE4 		ldr	pc, [sp], #4
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 0018 00000000 		.word	framebuffer
  69              		.cfi_endproc
  70              	.LFE54:
  72              		.section	.text.fb_gotoxy,"ax",%progbits
  73              		.align	2
  75              	fb_gotoxy:
  76              	.LFB55:
  78:include/fb/framebuffer.h **** 
  79:include/fb/framebuffer.h **** static inline void
  80:include/fb/framebuffer.h **** fb_gotoxy(uint16_t x,uint16_t y){
  77              		.loc 1 80 0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82              	.LVL2:
  81:include/fb/framebuffer.h **** 	framebuffer->cursor_x = x;
  83              		.loc 1 81 0
  84 0000 0C309FE5 		ldr	r3, .L8
  85 0004 003093E5 		ldr	r3, [r3, #0]
  86 0008 B402C3E1 		strh	r0, [r3, #36]	@ movhi
  82:include/fb/framebuffer.h **** 	framebuffer->cursor_y = y;
  87              		.loc 1 82 0
  88 000c B612C3E1 		strh	r1, [r3, #38]	@ movhi
  83:include/fb/framebuffer.h **** }
  89              		.loc 1 83 0
  90 0010 1EFF2FE1 		bx	lr
  91              	.L9:
  92              		.align	2
  93              	.L8:
  94 0014 00000000 		.word	framebuffer
  95              		.cfi_endproc
  96              	.LFE55:
  98              		.section	.text.key_handler,"ax",%progbits
  99              		.align	2
 100              		.global	key_handler
 102              	key_handler:
 103              	.LFB65:
 104              		.file 2 "apps/hello_world/main.c"
   1:apps/hello_world/main.c **** /* main program of Free Software for Calypso Phone */
   2:apps/hello_world/main.c **** 
   3:apps/hello_world/main.c **** /* (C) 2010 by Harald Welte <laforge@gnumonks.org>
   4:apps/hello_world/main.c ****  *
   5:apps/hello_world/main.c ****  * All Rights Reserved
   6:apps/hello_world/main.c ****  *
   7:apps/hello_world/main.c ****  * This program is free software; you can redistribute it and/or modify
   8:apps/hello_world/main.c ****  * it under the terms of the GNU General Public License as published by
   9:apps/hello_world/main.c ****  * the Free Software Foundation; either version 2 of the License, or
  10:apps/hello_world/main.c ****  * (at your option) any later version.
  11:apps/hello_world/main.c ****  *
  12:apps/hello_world/main.c ****  * This program is distributed in the hope that it will be useful,
  13:apps/hello_world/main.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:apps/hello_world/main.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:apps/hello_world/main.c ****  * GNU General Public License for more details.
  16:apps/hello_world/main.c ****  *
  17:apps/hello_world/main.c ****  * You should have received a copy of the GNU General Public License along
  18:apps/hello_world/main.c ****  * with this program; if not, write to the Free Software Foundation, Inc.,
  19:apps/hello_world/main.c ****  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  20:apps/hello_world/main.c ****  *
  21:apps/hello_world/main.c ****  */
  22:apps/hello_world/main.c **** 
  23:apps/hello_world/main.c **** #include <stdint.h>
  24:apps/hello_world/main.c **** #include <stdio.h>
  25:apps/hello_world/main.c **** #include <string.h>
  26:apps/hello_world/main.c **** 
  27:apps/hello_world/main.c **** #include <debug.h>
  28:apps/hello_world/main.c **** #include <memory.h>
  29:apps/hello_world/main.c **** #include <delay.h>
  30:apps/hello_world/main.c **** #include <rffe.h>
  31:apps/hello_world/main.c **** #include <keypad.h>
  32:apps/hello_world/main.c **** #include <board.h>
  33:apps/hello_world/main.c **** #include <abb/twl3025.h>
  34:apps/hello_world/main.c **** #include <rf/trf6151.h>
  35:apps/hello_world/main.c **** #include <calypso/clock.h>
  36:apps/hello_world/main.c **** #include <calypso/tpu.h>
  37:apps/hello_world/main.c **** #include <calypso/tsp.h>
  38:apps/hello_world/main.c **** #include <calypso/dsp.h>
  39:apps/hello_world/main.c **** #include <calypso/irq.h>
  40:apps/hello_world/main.c **** #include <calypso/misc.h>
  41:apps/hello_world/main.c **** #include <comm/sercomm.h>
  42:apps/hello_world/main.c **** #include <comm/timer.h>
  43:apps/hello_world/main.c **** #include <fb/framebuffer.h>
  44:apps/hello_world/main.c **** #include <battery/battery.h>
  45:apps/hello_world/main.c **** 
  46:apps/hello_world/main.c **** /* Main Program */
  47:apps/hello_world/main.c **** const char *hr = "======================================================================\n";
  48:apps/hello_world/main.c **** 
  49:apps/hello_world/main.c **** void key_handler(enum key_codes code, enum key_states state);
  50:apps/hello_world/main.c **** 
  51:apps/hello_world/main.c **** static void console_rx_cb(uint8_t dlci, struct msgb *msg)
  52:apps/hello_world/main.c **** {
  53:apps/hello_world/main.c **** 	if (dlci != SC_DLCI_CONSOLE) {
  54:apps/hello_world/main.c **** 		printf("Message for unknown DLCI %u\n", dlci);
  55:apps/hello_world/main.c **** 		return;
  56:apps/hello_world/main.c **** 	}
  57:apps/hello_world/main.c **** 
  58:apps/hello_world/main.c **** 	printf("Message on console DLCI: '%s'\n", msg->data);
  59:apps/hello_world/main.c **** 	msgb_free(msg);
  60:apps/hello_world/main.c **** }
  61:apps/hello_world/main.c **** 
  62:apps/hello_world/main.c **** static void l1a_l23_rx_cb(uint8_t dlci, struct msgb *msg)
  63:apps/hello_world/main.c **** {
  64:apps/hello_world/main.c **** 	int i;
  65:apps/hello_world/main.c **** 	puts("l1a_l23_rx_cb: ");
  66:apps/hello_world/main.c **** 	for (i = 0; i < msg->len; i++)
  67:apps/hello_world/main.c **** 		printf("%02x ", msg->data[i]);
  68:apps/hello_world/main.c **** 	puts("\n");
  69:apps/hello_world/main.c **** }
  70:apps/hello_world/main.c **** 
  71:apps/hello_world/main.c **** void
  72:apps/hello_world/main.c **** write_battery_info(void *p){
  73:apps/hello_world/main.c **** 	char buf[128];
  74:apps/hello_world/main.c **** 
  75:apps/hello_world/main.c **** 	fb_setfg(FB_COLOR_WHITE);
  76:apps/hello_world/main.c **** 	fb_setfont(FB_FONT_C64);
  77:apps/hello_world/main.c **** 
  78:apps/hello_world/main.c **** 	snprintf(buf,sizeof(buf),"B: %04d mV",battery_info.bat_volt_mV);
  79:apps/hello_world/main.c **** 	fb_gotoxy(8,41);
  80:apps/hello_world/main.c **** 	fb_putstr(buf,framebuffer->width-8);
  81:apps/hello_world/main.c **** 
  82:apps/hello_world/main.c **** 	snprintf(buf,sizeof(buf),"C: %04d mV",battery_info.charger_volt_mV);
  83:apps/hello_world/main.c **** 	fb_gotoxy(8,49);
  84:apps/hello_world/main.c **** 	fb_putstr(buf,framebuffer->width-8);
  85:apps/hello_world/main.c **** 
  86:apps/hello_world/main.c **** 	snprintf(buf,sizeof(buf),"F: %08x",battery_info.flags);
  87:apps/hello_world/main.c **** 	fb_gotoxy(8,57);
  88:apps/hello_world/main.c **** 	fb_putstr(buf,framebuffer->width-8);
  89:apps/hello_world/main.c **** 
  90:apps/hello_world/main.c **** 	fb_flush();
  91:apps/hello_world/main.c **** 	osmo_timer_schedule((struct osmo_timer_list*)p,100);
  92:apps/hello_world/main.c **** 
  93:apps/hello_world/main.c **** }
  94:apps/hello_world/main.c **** 
  95:apps/hello_world/main.c **** /* timer that fires the charging loop regularly */
  96:apps/hello_world/main.c **** static struct osmo_timer_list write_battery_info_timer = {
  97:apps/hello_world/main.c **** 	.cb = &write_battery_info,
  98:apps/hello_world/main.c **** 	.data = &write_battery_info_timer
  99:apps/hello_world/main.c **** };
 100:apps/hello_world/main.c **** 
 101:apps/hello_world/main.c **** int main(void)
 102:apps/hello_world/main.c **** {
 103:apps/hello_world/main.c **** 	board_init(1);
 104:apps/hello_world/main.c **** 
 105:apps/hello_world/main.c **** 	puts("\n\nOsmocomBB Hello World (revision " GIT_REVISION ")\n");
 106:apps/hello_world/main.c **** 	puts(hr);
 107:apps/hello_world/main.c **** 
 108:apps/hello_world/main.c **** 	/* Dump device identification */
 109:apps/hello_world/main.c **** 	dump_dev_id();
 110:apps/hello_world/main.c **** 	puts(hr);
 111:apps/hello_world/main.c **** 
 112:apps/hello_world/main.c **** 	/* Dump clock config before PLL set */
 113:apps/hello_world/main.c **** 	calypso_clk_dump();
 114:apps/hello_world/main.c **** 	puts(hr);
 115:apps/hello_world/main.c **** 
 116:apps/hello_world/main.c **** 	keypad_set_handler(&key_handler);
 117:apps/hello_world/main.c **** 
 118:apps/hello_world/main.c **** 	/* Dump clock config after PLL set */
 119:apps/hello_world/main.c **** 	calypso_clk_dump();
 120:apps/hello_world/main.c **** 	puts(hr);
 121:apps/hello_world/main.c **** 
 122:apps/hello_world/main.c **** 	fb_clear();
 123:apps/hello_world/main.c **** 
 124:apps/hello_world/main.c **** 	fb_setfg(FB_COLOR_BLACK);
 125:apps/hello_world/main.c **** 	fb_setbg(FB_COLOR_WHITE);
 126:apps/hello_world/main.c **** 	fb_setfont(FB_FONT_HELVB14);
 127:apps/hello_world/main.c **** 
 128:apps/hello_world/main.c **** 	fb_gotoxy(2,20);
 129:apps/hello_world/main.c **** 	fb_putstr("Hello World!",framebuffer->width-4);
 130:apps/hello_world/main.c **** 
 131:apps/hello_world/main.c **** 	fb_setfg(FB_COLOR_RED);
 132:apps/hello_world/main.c **** 	fb_setbg(FB_COLOR_BLUE);
 133:apps/hello_world/main.c **** 
 134:apps/hello_world/main.c **** 	fb_gotoxy(2,25);
 135:apps/hello_world/main.c **** 	fb_boxto(framebuffer->width-3,38);
 136:apps/hello_world/main.c **** 
 137:apps/hello_world/main.c **** 	fb_setfg(FB_COLOR_WHITE);
 138:apps/hello_world/main.c **** 	fb_setfont(FB_FONT_HELVR08);
 139:apps/hello_world/main.c **** 	fb_gotoxy(8,33);
 140:apps/hello_world/main.c **** 	fb_putstr("osmocom-bb",framebuffer->width-4);
 141:apps/hello_world/main.c **** 
 142:apps/hello_world/main.c **** 	fb_flush();
 143:apps/hello_world/main.c **** 
 144:apps/hello_world/main.c **** 
 145:apps/hello_world/main.c **** 
 146:apps/hello_world/main.c **** 	/* Dump all memory */
 147:apps/hello_world/main.c **** 	//dump_mem();
 148:apps/hello_world/main.c **** #if 0
 149:apps/hello_world/main.c **** 	/* Dump Bootloader */
 150:apps/hello_world/main.c **** 	memdump_range((void *)0x00000000, 0x2000);
 151:apps/hello_world/main.c **** 	puts(hr);
 152:apps/hello_world/main.c **** #endif
 153:apps/hello_world/main.c **** 
 154:apps/hello_world/main.c **** 	sercomm_register_rx_cb(SC_DLCI_CONSOLE, console_rx_cb);
 155:apps/hello_world/main.c **** 	sercomm_register_rx_cb(SC_DLCI_L1A_L23, l1a_l23_rx_cb);
 156:apps/hello_world/main.c **** 
 157:apps/hello_world/main.c **** 	osmo_timer_schedule(&write_battery_info_timer,100);
 158:apps/hello_world/main.c **** 
 159:apps/hello_world/main.c **** 	/* beyond this point we only react to interrupts */
 160:apps/hello_world/main.c **** 	puts("entering interrupt loop\n");
 161:apps/hello_world/main.c **** 	while (1) {
 162:apps/hello_world/main.c **** 		osmo_timers_update();
 163:apps/hello_world/main.c **** 	}
 164:apps/hello_world/main.c **** 
 165:apps/hello_world/main.c **** 	twl3025_power_off();
 166:apps/hello_world/main.c **** 
 167:apps/hello_world/main.c **** 	while (1) {}
 168:apps/hello_world/main.c **** }
 169:apps/hello_world/main.c **** 
 170:apps/hello_world/main.c **** void key_handler(enum key_codes code, enum key_states state)
 171:apps/hello_world/main.c **** {
 105              		.loc 2 171 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110              	.LVL3:
 172:apps/hello_world/main.c **** 	char test[16];
 173:apps/hello_world/main.c **** 
 174:apps/hello_world/main.c **** 	if (state != PRESSED)
 175:apps/hello_world/main.c **** 		return;
 176:apps/hello_world/main.c **** 
 177:apps/hello_world/main.c **** 	switch (code) {
 178:apps/hello_world/main.c **** 	case KEY_0:
 179:apps/hello_world/main.c **** 	case KEY_1:
 180:apps/hello_world/main.c **** 	case KEY_2:
 181:apps/hello_world/main.c **** 	case KEY_3:
 182:apps/hello_world/main.c **** 	case KEY_4:
 183:apps/hello_world/main.c **** 	case KEY_5:
 184:apps/hello_world/main.c **** 	case KEY_6:
 185:apps/hello_world/main.c **** 	case KEY_7:
 186:apps/hello_world/main.c **** 	case KEY_8:
 187:apps/hello_world/main.c **** 	case KEY_9:
 188:apps/hello_world/main.c **** 		// used to be display_puts...
 189:apps/hello_world/main.c **** 		break;
 190:apps/hello_world/main.c **** 	case KEY_STAR:
 191:apps/hello_world/main.c **** 		// used to be display puts...
 192:apps/hello_world/main.c **** 		break;
 193:apps/hello_world/main.c **** 	case KEY_HASH:
 194:apps/hello_world/main.c **** 		// used to be display puts...
 195:apps/hello_world/main.c **** 		break;
 196:apps/hello_world/main.c **** 	default:
 197:apps/hello_world/main.c **** 		break;
 198:apps/hello_world/main.c **** 	}
 199:apps/hello_world/main.c **** }
 111              		.loc 2 199 0
 112 0000 1EFF2FE1 		bx	lr
 113              		.cfi_endproc
 114              	.LFE65:
 116              		.section	.text.l1a_l23_rx_cb,"ax",%progbits
 117              		.align	2
 119              	l1a_l23_rx_cb:
 120              	.LFB62:
  63:apps/hello_world/main.c **** {
 121              		.loc 2 63 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              	.LVL4:
 126 0000 30402DE9 		stmfd	sp!, {r4, r5, lr}
 127              	.LCFI2:
 128              		.cfi_def_cfa_offset 12
  65:apps/hello_world/main.c **** 	puts("l1a_l23_rx_cb: ");
 129              		.loc 2 65 0
 130 0004 38009FE5 		ldr	r0, .L14
 131              	.LVL5:
  63:apps/hello_world/main.c **** {
 132              		.loc 2 63 0
 133 0008 0150A0E1 		mov	r5, r1
 134              		.cfi_offset 14, -4
 135              		.cfi_offset 5, -8
 136              		.cfi_offset 4, -12
  66:apps/hello_world/main.c **** 	for (i = 0; i < msg->len; i++)
 137              		.loc 2 66 0
 138 000c 0040A0E3 		mov	r4, #0
  65:apps/hello_world/main.c **** 	puts("l1a_l23_rx_cb: ");
 139              		.loc 2 65 0
 140 0010 FEFFFFEB 		bl	puts
 141              	.LVL6:
  66:apps/hello_world/main.c **** 	for (i = 0; i < msg->len; i++)
 142              		.loc 2 66 0
 143 0014 040000EA 		b	.L12
 144              	.LVL7:
 145              	.L13:
  67:apps/hello_world/main.c **** 		printf("%02x ", msg->data[i]);
 146              		.loc 2 67 0 discriminator 2
 147 0018 403095E5 		ldr	r3, [r5, #64]
 148 001c 24009FE5 		ldr	r0, .L14+4
 149 0020 0410D3E7 		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 150 0024 FEFFFFEB 		bl	printf
  66:apps/hello_world/main.c **** 	for (i = 0; i < msg->len; i++)
 151              		.loc 2 66 0 discriminator 2
 152 0028 014084E2 		add	r4, r4, #1
 153              	.LVL8:
 154              	.L12:
  66:apps/hello_world/main.c **** 	for (i = 0; i < msg->len; i++)
 155              		.loc 2 66 0 is_stmt 0 discriminator 1
 156 002c B633D5E1 		ldrh	r3, [r5, #54]
 157 0030 030054E1 		cmp	r4, r3
 158 0034 F7FFFFBA 		blt	.L13
  68:apps/hello_world/main.c **** 	puts("\n");
 159              		.loc 2 68 0 is_stmt 1
 160 0038 0C009FE5 		ldr	r0, .L14+8
  69:apps/hello_world/main.c **** }
 161              		.loc 2 69 0
 162 003c 3040BDE8 		ldmfd	sp!, {r4, r5, lr}
  68:apps/hello_world/main.c **** 	puts("\n");
 163              		.loc 2 68 0
 164 0040 FEFFFFEA 		b	puts
 165              	.L15:
 166              		.align	2
 167              	.L14:
 168 0044 00000000 		.word	.LC0
 169 0048 10000000 		.word	.LC1
 170 004c 16000000 		.word	.LC2
 171              		.cfi_endproc
 172              	.LFE62:
 174              		.section	.text.console_rx_cb,"ax",%progbits
 175              		.align	2
 177              	console_rx_cb:
 178              	.LFB61:
  52:apps/hello_world/main.c **** {
 179              		.loc 2 52 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              	.LVL9:
 184 0000 10402DE9 		stmfd	sp!, {r4, lr}
 185              	.LCFI3:
 186              		.cfi_def_cfa_offset 8
  52:apps/hello_world/main.c **** {
 187              		.loc 2 52 0
 188 0004 0140A0E1 		mov	r4, r1
 189              		.cfi_offset 14, -4
 190              		.cfi_offset 4, -8
 191 0008 FF1000E2 		and	r1, r0, #255
 192              	.LVL10:
  53:apps/hello_world/main.c **** 	if (dlci != SC_DLCI_CONSOLE) {
 193              		.loc 2 53 0
 194 000c 0A0051E3 		cmp	r1, #10
 195 0010 0200000A 		beq	.L17
  54:apps/hello_world/main.c **** 		printf("Message for unknown DLCI %u\n", dlci);
 196              		.loc 2 54 0
 197 0014 1C009FE5 		ldr	r0, .L18
 198              	.LVL11:
  60:apps/hello_world/main.c **** }
 199              		.loc 2 60 0
 200 0018 1040BDE8 		ldmfd	sp!, {r4, lr}
  54:apps/hello_world/main.c **** 		printf("Message for unknown DLCI %u\n", dlci);
 201              		.loc 2 54 0
 202 001c FEFFFFEA 		b	printf
 203              	.LVL12:
 204              	.L17:
  58:apps/hello_world/main.c **** 	printf("Message on console DLCI: '%s'\n", msg->data);
 205              		.loc 2 58 0
 206 0020 401094E5 		ldr	r1, [r4, #64]
 207 0024 10009FE5 		ldr	r0, .L18+4
 208              	.LVL13:
 209 0028 FEFFFFEB 		bl	printf
  59:apps/hello_world/main.c **** 	msgb_free(msg);
 210              		.loc 2 59 0
 211 002c 0400A0E1 		mov	r0, r4
  60:apps/hello_world/main.c **** }
 212              		.loc 2 60 0
 213 0030 1040BDE8 		ldmfd	sp!, {r4, lr}
  59:apps/hello_world/main.c **** 	msgb_free(msg);
 214              		.loc 2 59 0
 215 0034 FEFFFFEA 		b	msgb_free
 216              	.L19:
 217              		.align	2
 218              	.L18:
 219 0038 18000000 		.word	.LC3
 220 003c 35000000 		.word	.LC4
 221              		.cfi_endproc
 222              	.LFE61:
 224              		.section	.text.write_battery_info,"ax",%progbits
 225              		.align	2
 226              		.global	write_battery_info
 228              	write_battery_info:
 229              	.LFB63:
  72:apps/hello_world/main.c **** write_battery_info(void *p){
 230              		.loc 2 72 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 128
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              	.LVL14:
 235 0000 F0402DE9 		stmfd	sp!, {r4, r5, r6, r7, lr}
 236              	.LCFI4:
 237              		.cfi_def_cfa_offset 20
 238              	.LBB24:
 239              	.LBB26:
  84:include/fb/framebuffer.h **** 
  85:include/fb/framebuffer.h **** static inline void
  86:include/fb/framebuffer.h **** fb_setfg(uint32_t color){
  87:include/fb/framebuffer.h **** 	framebuffer->fg_color = color;
 240              		.loc 1 87 0
 241 0004 D4509FE5 		ldr	r5, .L21
 242              		.cfi_offset 14, -4
 243              		.cfi_offset 7, -8
 244              		.cfi_offset 6, -12
 245              		.cfi_offset 5, -16
 246              		.cfi_offset 4, -20
 247 0008 003095E5 		ldr	r3, [r5, #0]
 248              	.LBE26:
 249              	.LBE24:
  78:apps/hello_world/main.c **** 	snprintf(buf,sizeof(buf),"B: %04d mV",battery_info.bat_volt_mV);
 250              		.loc 2 78 0
 251 000c D0609FE5 		ldr	r6, .L21+4
 252              	.LBB28:
 253              	.LBB25:
 254              		.loc 1 87 0
 255 0010 FF24E0E3 		mvn	r2, #-16777216
 256              	.LBE25:
 257              	.LBE28:
  72:apps/hello_world/main.c **** write_battery_info(void *p){
 258              		.loc 2 72 0
 259 0014 80D04DE2 		sub	sp, sp, #128
 260              	.LCFI5:
 261              		.cfi_def_cfa_offset 148
 262              	.LBB29:
 263              	.LBB27:
 264              		.loc 1 87 0
 265 0018 282083E5 		str	r2, [r3, #40]
 266              	.LVL15:
 267              	.LBE27:
 268              	.LBE29:
 269              	.LBB30:
 270              	.LBB31:
  88:include/fb/framebuffer.h **** }
  89:include/fb/framebuffer.h **** 
  90:include/fb/framebuffer.h **** static inline void
  91:include/fb/framebuffer.h **** fb_setbg(uint32_t color){
  92:include/fb/framebuffer.h **** 	framebuffer->bg_color = color;
  93:include/fb/framebuffer.h **** }
  94:include/fb/framebuffer.h **** 
  95:include/fb/framebuffer.h **** static inline void
  96:include/fb/framebuffer.h **** fb_setfont(enum fb_font_id fid){
  97:include/fb/framebuffer.h **** 	framebuffer->font = fid;
 271              		.loc 1 97 0
 272 001c 0220A0E3 		mov	r2, #2
 273              	.LBE31:
 274              	.LBE30:
  72:apps/hello_world/main.c **** write_battery_info(void *p){
 275              		.loc 2 72 0
 276 0020 0070A0E1 		mov	r7, r0
 277              	.LBB33:
 278              	.LBB32:
 279              		.loc 1 97 0
 280 0024 302083E5 		str	r2, [r3, #48]
 281              	.LBE32:
 282              	.LBE33:
  78:apps/hello_world/main.c **** 	snprintf(buf,sizeof(buf),"B: %04d mV",battery_info.bat_volt_mV);
 283              		.loc 2 78 0
 284 0028 0D00A0E1 		mov	r0, sp
 285              	.LVL16:
 286 002c B4209FE5 		ldr	r2, .L21+8
 287 0030 083096E5 		ldr	r3, [r6, #8]
 288 0034 8010A0E3 		mov	r1, #128
 289 0038 FEFFFFEB 		bl	snprintf
  79:apps/hello_world/main.c **** 	fb_gotoxy(8,41);
 290              		.loc 2 79 0
 291 003c 0800A0E3 		mov	r0, #8
 292 0040 2910A0E3 		mov	r1, #41
 293 0044 FEFFFFEB 		bl	fb_gotoxy
  80:apps/hello_world/main.c **** 	fb_putstr(buf,framebuffer->width-8);
 294              		.loc 2 80 0
 295 0048 003095E5 		ldr	r3, [r5, #0]
 296 004c B012D3E1 		ldrh	r1, [r3, #32]
 297 0050 0D00A0E1 		mov	r0, sp
 298 0054 081041E2 		sub	r1, r1, #8
 299 0058 FEFFFFEB 		bl	fb_putstr
  82:apps/hello_world/main.c **** 	snprintf(buf,sizeof(buf),"C: %04d mV",battery_info.charger_volt_mV);
 300              		.loc 2 82 0
 301 005c 88209FE5 		ldr	r2, .L21+12
 302 0060 043096E5 		ldr	r3, [r6, #4]
 303 0064 0D00A0E1 		mov	r0, sp
 304 0068 8010A0E3 		mov	r1, #128
 305 006c FEFFFFEB 		bl	snprintf
  83:apps/hello_world/main.c **** 	fb_gotoxy(8,49);
 306              		.loc 2 83 0
 307 0070 0800A0E3 		mov	r0, #8
 308 0074 3110A0E3 		mov	r1, #49
 309 0078 FEFFFFEB 		bl	fb_gotoxy
  84:apps/hello_world/main.c **** 	fb_putstr(buf,framebuffer->width-8);
 310              		.loc 2 84 0
 311 007c 003095E5 		ldr	r3, [r5, #0]
 312 0080 B012D3E1 		ldrh	r1, [r3, #32]
 313 0084 0D00A0E1 		mov	r0, sp
 314 0088 081041E2 		sub	r1, r1, #8
 315 008c FEFFFFEB 		bl	fb_putstr
  86:apps/hello_world/main.c **** 	snprintf(buf,sizeof(buf),"F: %08x",battery_info.flags);
 316              		.loc 2 86 0
 317 0090 58209FE5 		ldr	r2, .L21+16
 318 0094 003096E5 		ldr	r3, [r6, #0]
 319 0098 0D00A0E1 		mov	r0, sp
 320 009c 8010A0E3 		mov	r1, #128
 321 00a0 FEFFFFEB 		bl	snprintf
  87:apps/hello_world/main.c **** 	fb_gotoxy(8,57);
 322              		.loc 2 87 0
 323 00a4 0800A0E3 		mov	r0, #8
 324 00a8 3910A0E3 		mov	r1, #57
 325 00ac FEFFFFEB 		bl	fb_gotoxy
  88:apps/hello_world/main.c **** 	fb_putstr(buf,framebuffer->width-8);
 326              		.loc 2 88 0
 327 00b0 003095E5 		ldr	r3, [r5, #0]
 328 00b4 B012D3E1 		ldrh	r1, [r3, #32]
 329 00b8 0D00A0E1 		mov	r0, sp
 330 00bc 081041E2 		sub	r1, r1, #8
 331 00c0 FEFFFFEB 		bl	fb_putstr
  90:apps/hello_world/main.c **** 	fb_flush();
 332              		.loc 2 90 0
 333 00c4 FEFFFFEB 		bl	fb_flush
  91:apps/hello_world/main.c **** 	osmo_timer_schedule((struct osmo_timer_list*)p,100);
 334              		.loc 2 91 0
 335 00c8 0700A0E1 		mov	r0, r7
 336 00cc 6410A0E3 		mov	r1, #100
  78:apps/hello_world/main.c **** 	snprintf(buf,sizeof(buf),"B: %04d mV",battery_info.bat_volt_mV);
 337              		.loc 2 78 0
 338 00d0 0D40A0E1 		mov	r4, sp
  91:apps/hello_world/main.c **** 	osmo_timer_schedule((struct osmo_timer_list*)p,100);
 339              		.loc 2 91 0
 340 00d4 FEFFFFEB 		bl	osmo_timer_schedule
  93:apps/hello_world/main.c **** }
 341              		.loc 2 93 0
 342 00d8 80D08DE2 		add	sp, sp, #128
 343 00dc F080BDE8 		ldmfd	sp!, {r4, r5, r6, r7, pc}
 344              	.L22:
 345              		.align	2
 346              	.L21:
 347 00e0 00000000 		.word	framebuffer
 348 00e4 00000000 		.word	battery_info
 349 00e8 54000000 		.word	.LC5
 350 00ec 5F000000 		.word	.LC6
 351 00f0 6A000000 		.word	.LC7
 352              		.cfi_endproc
 353              	.LFE63:
 355              		.section	.text.main,"ax",%progbits
 356              		.align	2
 357              		.global	main
 359              	main:
 360              	.LFB64:
 102:apps/hello_world/main.c **** {
 361              		.loc 2 102 0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365 0000 F0402DE9 		stmfd	sp!, {r4, r5, r6, r7, lr}
 366              	.LCFI6:
 367              		.cfi_def_cfa_offset 20
 103:apps/hello_world/main.c **** 	board_init(1);
 368              		.loc 2 103 0
 369 0004 0100A0E3 		mov	r0, #1
 106:apps/hello_world/main.c **** 	puts(hr);
 370              		.loc 2 106 0
 371 0008 2C519FE5 		ldr	r5, .L25
 372              		.cfi_offset 14, -4
 373              		.cfi_offset 7, -8
 374              		.cfi_offset 6, -12
 375              		.cfi_offset 5, -16
 376              		.cfi_offset 4, -20
 103:apps/hello_world/main.c **** 	board_init(1);
 377              		.loc 2 103 0
 378 000c FEFFFFEB 		bl	board_init
 105:apps/hello_world/main.c **** 	puts("\n\nOsmocomBB Hello World (revision " GIT_REVISION ")\n");
 379              		.loc 2 105 0
 380 0010 28019FE5 		ldr	r0, .L25+4
 381 0014 FEFFFFEB 		bl	puts
 106:apps/hello_world/main.c **** 	puts(hr);
 382              		.loc 2 106 0
 383 0018 000095E5 		ldr	r0, [r5, #0]
 384 001c FEFFFFEB 		bl	puts
 109:apps/hello_world/main.c **** 	dump_dev_id();
 385              		.loc 2 109 0
 386 0020 FEFFFFEB 		bl	dump_dev_id
 110:apps/hello_world/main.c **** 	puts(hr);
 387              		.loc 2 110 0
 388 0024 000095E5 		ldr	r0, [r5, #0]
 389 0028 FEFFFFEB 		bl	puts
 113:apps/hello_world/main.c **** 	calypso_clk_dump();
 390              		.loc 2 113 0
 391 002c FEFFFFEB 		bl	calypso_clk_dump
 114:apps/hello_world/main.c **** 	puts(hr);
 392              		.loc 2 114 0
 393 0030 000095E5 		ldr	r0, [r5, #0]
 394              	.LBB34:
 395              	.LBB35:
  56:include/fb/framebuffer.h **** 	framebuffer->clear();
 396              		.loc 1 56 0
 397 0034 08419FE5 		ldr	r4, .L25+8
 398              	.LBE35:
 399              	.LBE34:
 114:apps/hello_world/main.c **** 	puts(hr);
 400              		.loc 2 114 0
 401 0038 FEFFFFEB 		bl	puts
 116:apps/hello_world/main.c **** 	keypad_set_handler(&key_handler);
 402              		.loc 2 116 0
 403 003c 04019FE5 		ldr	r0, .L25+12
 404 0040 FEFFFFEB 		bl	keypad_set_handler
 119:apps/hello_world/main.c **** 	calypso_clk_dump();
 405              		.loc 2 119 0
 406 0044 FEFFFFEB 		bl	calypso_clk_dump
 120:apps/hello_world/main.c **** 	puts(hr);
 407              		.loc 2 120 0
 408 0048 000095E5 		ldr	r0, [r5, #0]
 409 004c FEFFFFEB 		bl	puts
 410              	.LBB37:
 411              	.LBB36:
  56:include/fb/framebuffer.h **** 	framebuffer->clear();
 412              		.loc 1 56 0
 413 0050 003094E5 		ldr	r3, [r4, #0]
 414 0054 0FE0A0E1 		mov	lr, pc
 415 0058 0CF093E5 		ldr	pc, [r3, #12]
 416              	.LVL17:
 417              	.LBE36:
 418              	.LBE37:
 419              	.LBB38:
 420              	.LBB40:
  87:include/fb/framebuffer.h **** 	framebuffer->fg_color = color;
 421              		.loc 1 87 0
 422 005c 003094E5 		ldr	r3, [r4, #0]
 423              	.LBE40:
 424              	.LBE38:
 425              	.LBB42:
 426              	.LBB43:
 427              		.loc 1 97 0
 428 0060 0120A0E3 		mov	r2, #1
 429              	.LBE43:
 430              	.LBE42:
 431              	.LBB45:
 432              	.LBB39:
  87:include/fb/framebuffer.h **** 	framebuffer->fg_color = color;
 433              		.loc 1 87 0
 434 0064 0060A0E3 		mov	r6, #0
 435              	.LBE39:
 436              	.LBE45:
 437              	.LBB46:
 438              	.LBB47:
  92:include/fb/framebuffer.h **** 	framebuffer->bg_color = color;
 439              		.loc 1 92 0
 440 0068 FF74E0E3 		mvn	r7, #-16777216
 441              	.LBE47:
 442              	.LBE46:
 443              	.LBB49:
 444              	.LBB44:
 445              		.loc 1 97 0
 446 006c 302083E5 		str	r2, [r3, #48]
 447              	.LBE44:
 448              	.LBE49:
 449              	.LBB50:
 450              	.LBB41:
  87:include/fb/framebuffer.h **** 	framebuffer->fg_color = color;
 451              		.loc 1 87 0
 452 0070 286083E5 		str	r6, [r3, #40]
 453              	.LVL18:
 454              	.LBE41:
 455              	.LBE50:
 456              	.LBB51:
 457              	.LBB48:
  92:include/fb/framebuffer.h **** 	framebuffer->bg_color = color;
 458              		.loc 1 92 0
 459 0074 2C7083E5 		str	r7, [r3, #44]
 460              	.LVL19:
 461              	.LBE48:
 462              	.LBE51:
 128:apps/hello_world/main.c **** 	fb_gotoxy(2,20);
 463              		.loc 2 128 0
 464 0078 0200A0E3 		mov	r0, #2
 465 007c 1410A0E3 		mov	r1, #20
 466 0080 FEFFFFEB 		bl	fb_gotoxy
 129:apps/hello_world/main.c **** 	fb_putstr("Hello World!",framebuffer->width-4);
 467              		.loc 2 129 0
 468 0084 003094E5 		ldr	r3, [r4, #0]
 469 0088 B012D3E1 		ldrh	r1, [r3, #32]
 470 008c B8009FE5 		ldr	r0, .L25+16
 471 0090 041041E2 		sub	r1, r1, #4
 472 0094 FEFFFFEB 		bl	fb_putstr
 473              	.LVL20:
 474              	.LBB52:
 475              	.LBB53:
  87:include/fb/framebuffer.h **** 	framebuffer->fg_color = color;
 476              		.loc 1 87 0
 477 0098 003094E5 		ldr	r3, [r4, #0]
 478 009c FF28A0E3 		mov	r2, #16711680
 479 00a0 282083E5 		str	r2, [r3, #40]
 480              	.LVL21:
 481              	.LBE53:
 482              	.LBE52:
 483              	.LBB54:
 484              	.LBB55:
  92:include/fb/framebuffer.h **** 	framebuffer->bg_color = color;
 485              		.loc 1 92 0
 486 00a4 FF20A0E3 		mov	r2, #255
 487 00a8 2C2083E5 		str	r2, [r3, #44]
 488              	.LBE55:
 489              	.LBE54:
 134:apps/hello_world/main.c **** 	fb_gotoxy(2,25);
 490              		.loc 2 134 0
 491 00ac 0200A0E3 		mov	r0, #2
 492 00b0 1910A0E3 		mov	r1, #25
 493 00b4 FEFFFFEB 		bl	fb_gotoxy
 135:apps/hello_world/main.c **** 	fb_boxto(framebuffer->width-3,38);
 494              		.loc 2 135 0
 495 00b8 003094E5 		ldr	r3, [r4, #0]
 496              	.LVL22:
 497 00bc B002D3E1 		ldrh	r0, [r3, #32]
 498 00c0 030040E2 		sub	r0, r0, #3
 499 00c4 0008A0E1 		mov	r0, r0, asl #16
 500              	.LBB56:
 501              	.LBB57:
  61:include/fb/framebuffer.h **** 	framebuffer->boxto(x,y);
 502              		.loc 1 61 0
 503 00c8 2008A0E1 		mov	r0, r0, lsr #16
 504 00cc 2610A0E3 		mov	r1, #38
 505 00d0 0FE0A0E1 		mov	lr, pc
 506 00d4 10F093E5 		ldr	pc, [r3, #16]
 507              	.LVL23:
 508              	.LBE57:
 509              	.LBE56:
 510              	.LBB58:
 511              	.LBB59:
  87:include/fb/framebuffer.h **** 	framebuffer->fg_color = color;
 512              		.loc 1 87 0
 513 00d8 003094E5 		ldr	r3, [r4, #0]
 514              	.LBE59:
 515              	.LBE58:
 139:apps/hello_world/main.c **** 	fb_gotoxy(8,33);
 516              		.loc 2 139 0
 517 00dc 0800A0E3 		mov	r0, #8
 518              	.LBB61:
 519              	.LBB60:
  87:include/fb/framebuffer.h **** 	framebuffer->fg_color = color;
 520              		.loc 1 87 0
 521 00e0 287083E5 		str	r7, [r3, #40]
 522              	.LVL24:
 523              	.LBE60:
 524              	.LBE61:
 525              	.LBB62:
 526              	.LBB63:
 527              		.loc 1 97 0
 528 00e4 306083E5 		str	r6, [r3, #48]
 529              	.LBE63:
 530              	.LBE62:
 139:apps/hello_world/main.c **** 	fb_gotoxy(8,33);
 531              		.loc 2 139 0
 532 00e8 2110A0E3 		mov	r1, #33
 533 00ec FEFFFFEB 		bl	fb_gotoxy
 140:apps/hello_world/main.c **** 	fb_putstr("osmocom-bb",framebuffer->width-4);
 534              		.loc 2 140 0
 535 00f0 003094E5 		ldr	r3, [r4, #0]
 536 00f4 B012D3E1 		ldrh	r1, [r3, #32]
 537 00f8 50009FE5 		ldr	r0, .L25+20
 538 00fc 041041E2 		sub	r1, r1, #4
 539 0100 FEFFFFEB 		bl	fb_putstr
 142:apps/hello_world/main.c **** 	fb_flush();
 540              		.loc 2 142 0
 541 0104 FEFFFFEB 		bl	fb_flush
 154:apps/hello_world/main.c **** 	sercomm_register_rx_cb(SC_DLCI_CONSOLE, console_rx_cb);
 542              		.loc 2 154 0
 543 0108 44109FE5 		ldr	r1, .L25+24
 544 010c 0A00A0E3 		mov	r0, #10
 545 0110 FEFFFFEB 		bl	sercomm_register_rx_cb
 155:apps/hello_world/main.c **** 	sercomm_register_rx_cb(SC_DLCI_L1A_L23, l1a_l23_rx_cb);
 546              		.loc 2 155 0
 547 0114 3C109FE5 		ldr	r1, .L25+28
 548 0118 0500A0E3 		mov	r0, #5
 549 011c FEFFFFEB 		bl	sercomm_register_rx_cb
 157:apps/hello_world/main.c **** 	osmo_timer_schedule(&write_battery_info_timer,100);
 550              		.loc 2 157 0
 551 0120 040085E2 		add	r0, r5, #4
 552 0124 6410A0E3 		mov	r1, #100
 553 0128 FEFFFFEB 		bl	osmo_timer_schedule
 160:apps/hello_world/main.c **** 	puts("entering interrupt loop\n");
 554              		.loc 2 160 0
 555 012c 28009FE5 		ldr	r0, .L25+32
 556 0130 FEFFFFEB 		bl	puts
 557              	.L24:
 162:apps/hello_world/main.c **** 		osmo_timers_update();
 558              		.loc 2 162 0 discriminator 1
 559 0134 FEFFFFEB 		bl	osmo_timers_update
 560 0138 FDFFFFEA 		b	.L24
 561              	.L26:
 562              		.align	2
 563              	.L25:
 564 013c 00000000 		.word	.LANCHOR0
 565 0140 72000000 		.word	.LC8
 566 0144 00000000 		.word	framebuffer
 567 0148 00000000 		.word	key_handler
 568 014c BC000000 		.word	.LC9
 569 0150 C9000000 		.word	.LC10
 570 0154 00000000 		.word	console_rx_cb
 571 0158 00000000 		.word	l1a_l23_rx_cb
 572 015c D4000000 		.word	.LC11
 573              		.cfi_endproc
 574              	.LFE64:
 576              		.global	hr
 577              		.section	.rodata.str1.1,"aMS",%progbits,1
 578              	.LC0:
 579 0000 6C31615F 		.ascii	"l1a_l23_rx_cb: \000"
 579      6C32335F 
 579      72785F63 
 579      623A2000 
 580              	.LC1:
 581 0010 25303278 		.ascii	"%02x \000"
 581      2000
 582              	.LC2:
 583 0016 0A00     		.ascii	"\012\000"
 584              	.LC3:
 585 0018 4D657373 		.ascii	"Message for unknown DLCI %u\012\000"
 585      61676520 
 585      666F7220 
 585      756E6B6E 
 585      6F776E20 
 586              	.LC4:
 587 0035 4D657373 		.ascii	"Message on console DLCI: '%s'\012\000"
 587      61676520 
 587      6F6E2063 
 587      6F6E736F 
 587      6C652044 
 588              	.LC5:
 589 0054 423A2025 		.ascii	"B: %04d mV\000"
 589      30346420 
 589      6D5600
 590              	.LC6:
 591 005f 433A2025 		.ascii	"C: %04d mV\000"
 591      30346420 
 591      6D5600
 592              	.LC7:
 593 006a 463A2025 		.ascii	"F: %08x\000"
 593      30387800 
 594              	.LC8:
 595 0072 0A0A4F73 		.ascii	"\012\012OsmocomBB Hello World (revision osmocon_v0."
 595      6D6F636F 
 595      6D424220 
 595      48656C6C 
 595      6F20576F 
 596 009f 302E302D 		.ascii	"0.0-1754-gfc20a37-modified)\012\000"
 596      31373534 
 596      2D676663 
 596      32306133 
 596      372D6D6F 
 597              	.LC9:
 598 00bc 48656C6C 		.ascii	"Hello World!\000"
 598      6F20576F 
 598      726C6421 
 598      00
 599              	.LC10:
 600 00c9 6F736D6F 		.ascii	"osmocom-bb\000"
 600      636F6D2D 
 600      626200
 601              	.LC11:
 602 00d4 656E7465 		.ascii	"entering interrupt loop\012\000"
 602      72696E67 
 602      20696E74 
 602      65727275 
 602      7074206C 
 603              	.LC12:
 604 00ed 3D3D3D3D 		.ascii	"==================================================="
 604      3D3D3D3D 
 604      3D3D3D3D 
 604      3D3D3D3D 
 604      3D3D3D3D 
 605 0120 3D3D3D3D 		.ascii	"===================\012\000"
 605      3D3D3D3D 
 605      3D3D3D3D 
 605      3D3D3D3D 
 605      3D3D3D0A 
 606              		.data
 607              		.align	2
 608              		.set	.LANCHOR0,. + 0
 611              	hr:
 612 0000 ED000000 		.word	.LC12
 615              	write_battery_info_timer:
 616 0004 00000000 		.space	16
 616      00000000 
 616      00000000 
 616      00000000 
 617 0014 00000000 		.word	write_battery_info
 618 0018 04000000 		.word	write_battery_info_timer
 619              		.text
 620              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccPJ9ZvX.s:12     .text.fb_putstr:0000000000000000 $a
     /tmp/ccPJ9ZvX.s:14     .text.fb_putstr:0000000000000000 fb_putstr
     /tmp/ccPJ9ZvX.s:39     .text.fb_putstr:0000000000000018 $d
     /tmp/ccPJ9ZvX.s:44     .text.fb_flush:0000000000000000 $a
     /tmp/ccPJ9ZvX.s:46     .text.fb_flush:0000000000000000 fb_flush
     /tmp/ccPJ9ZvX.s:68     .text.fb_flush:0000000000000018 $d
     /tmp/ccPJ9ZvX.s:73     .text.fb_gotoxy:0000000000000000 $a
     /tmp/ccPJ9ZvX.s:75     .text.fb_gotoxy:0000000000000000 fb_gotoxy
     /tmp/ccPJ9ZvX.s:94     .text.fb_gotoxy:0000000000000014 $d
     /tmp/ccPJ9ZvX.s:99     .text.key_handler:0000000000000000 $a
     /tmp/ccPJ9ZvX.s:102    .text.key_handler:0000000000000000 key_handler
     /tmp/ccPJ9ZvX.s:117    .text.l1a_l23_rx_cb:0000000000000000 $a
     /tmp/ccPJ9ZvX.s:119    .text.l1a_l23_rx_cb:0000000000000000 l1a_l23_rx_cb
     /tmp/ccPJ9ZvX.s:168    .text.l1a_l23_rx_cb:0000000000000044 $d
     /tmp/ccPJ9ZvX.s:175    .text.console_rx_cb:0000000000000000 $a
     /tmp/ccPJ9ZvX.s:177    .text.console_rx_cb:0000000000000000 console_rx_cb
     /tmp/ccPJ9ZvX.s:219    .text.console_rx_cb:0000000000000038 $d
     /tmp/ccPJ9ZvX.s:225    .text.write_battery_info:0000000000000000 $a
     /tmp/ccPJ9ZvX.s:228    .text.write_battery_info:0000000000000000 write_battery_info
     /tmp/ccPJ9ZvX.s:347    .text.write_battery_info:00000000000000e0 $d
     /tmp/ccPJ9ZvX.s:356    .text.main:0000000000000000 $a
     /tmp/ccPJ9ZvX.s:359    .text.main:0000000000000000 main
     /tmp/ccPJ9ZvX.s:564    .text.main:000000000000013c $d
     /tmp/ccPJ9ZvX.s:611    .data:0000000000000000 hr
     /tmp/ccPJ9ZvX.s:607    .data:0000000000000000 $d
     /tmp/ccPJ9ZvX.s:615    .data:0000000000000004 write_battery_info_timer
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
framebuffer
puts
printf
msgb_free
snprintf
osmo_timer_schedule
battery_info
board_init
dump_dev_id
calypso_clk_dump
keypad_set_handler
sercomm_register_rx_cb
osmo_timers_update
