   1              		.file	"rffe_dualband_e86.c"
   9              	.Ltext0:
  10              		.cfi_sections	.debug_frame
  11              		.section	.text.rffe_mode,"ax",%progbits
  12              		.align	2
  13              		.global	rffe_mode
  15              	rffe_mode:
  16              	.LFB3:
  17              		.file 1 "board/compal_e86/rffe_dualband_e86.c"
   1:board/compal_e86/rffe_dualband_e86.c **** #include <stdint.h>
   2:board/compal_e86/rffe_dualband_e86.c **** #include <stdio.h>
   3:board/compal_e86/rffe_dualband_e86.c **** 
   4:board/compal_e86/rffe_dualband_e86.c **** #include <debug.h>
   5:board/compal_e86/rffe_dualband_e86.c **** #include <memory.h>
   6:board/compal_e86/rffe_dualband_e86.c **** #include <rffe.h>
   7:board/compal_e86/rffe_dualband_e86.c **** #include <calypso/tsp.h>
   8:board/compal_e86/rffe_dualband_e86.c **** #include <rf/trf6151.h>
   9:board/compal_e86/rffe_dualband_e86.c **** 
  10:board/compal_e86/rffe_dualband_e86.c **** /* This is a value that has been measured on the C123 by Harald: 71dBm,
  11:board/compal_e86/rffe_dualband_e86.c ****    it is the difference between the input level at the antenna and what
  12:board/compal_e86/rffe_dualband_e86.c ****    the DSP reports, subtracted by the total gain of the TRF6151 */
  13:board/compal_e86/rffe_dualband_e86.c **** #define SYSTEM_INHERENT_GAIN	71
  14:board/compal_e86/rffe_dualband_e86.c **** 
  15:board/compal_e86/rffe_dualband_e86.c **** /* describe how the RF frontend is wired on the Motorola E86 board (C139/C140) */
  16:board/compal_e86/rffe_dualband_e86.c **** 
  17:board/compal_e86/rffe_dualband_e86.c **** #define		RITA_RESET	TSPACT(0)	/* Reset of the Rita TRF6151 */
  18:board/compal_e86/rffe_dualband_e86.c **** #define		PA_ENABLE	TSPACT(1)	/* Enable the Power Amplifier */
  19:board/compal_e86/rffe_dualband_e86.c **** #define		DCS_TX		TSPACT(6)	/* DCS Transmit Enable */
  20:board/compal_e86/rffe_dualband_e86.c **** #define		GSM_TX1		TSPACT(8)	/* GSM Transmit Enable 1 */
  21:board/compal_e86/rffe_dualband_e86.c **** 
  22:board/compal_e86/rffe_dualband_e86.c **** /* in order to save a transistor, the E86 has a second signal for GSM TX */
  23:board/compal_e86/rffe_dualband_e86.c **** #define		GSM_TX2		TSPACT(2)	/* GSM Transmit Enable 2 */
  24:board/compal_e86/rffe_dualband_e86.c **** 
  25:board/compal_e86/rffe_dualband_e86.c **** #define		IOTA_STROBE	TSPEN(0)	/* Strobe for the Iota TSP */
  26:board/compal_e86/rffe_dualband_e86.c **** #define		RITA_STROBE	TSPEN(2)	/* Strobe for the Rita TSP */
  27:board/compal_e86/rffe_dualband_e86.c **** 
  28:board/compal_e86/rffe_dualband_e86.c **** /* switch RF Frontend Mode */
  29:board/compal_e86/rffe_dualband_e86.c **** void rffe_mode(enum gsm_band band, int tx)
  30:board/compal_e86/rffe_dualband_e86.c **** {
  18              		.loc 1 30 0
  19              		.cfi_startproc
  20              		@ args = 0, pretend = 0, frame = 0
  21              		@ frame_needed = 0, uses_anonymous_args = 0
  22              	.LVL0:
  23 0000 30402DE9 		stmfd	sp!, {r4, r5, lr}
  24              	.LCFI0:
  25              		.cfi_def_cfa_offset 12
  26              		.loc 1 30 0
  27 0004 0150A0E1 		mov	r5, r1
  28              		.cfi_offset 14, -4
  29              		.cfi_offset 5, -8
  30              		.cfi_offset 4, -12
  31 0008 0040A0E1 		mov	r4, r0
  31:board/compal_e86/rffe_dualband_e86.c **** 	uint16_t tspact = tsp_act_state();
  32              		.loc 1 31 0
  33 000c FEFFFFEB 		bl	tsp_act_state
  34              	.LVL1:
  32:board/compal_e86/rffe_dualband_e86.c **** 
  33:board/compal_e86/rffe_dualband_e86.c **** 	/* First we mask off all bits from the state cache */
  34:board/compal_e86/rffe_dualband_e86.c **** 	tspact &= ~(PA_ENABLE);
  35              		.loc 1 34 0
  36 0010 28309FE5 		ldr	r3, .L5
  35:board/compal_e86/rffe_dualband_e86.c **** 	tspact |=  DCS_TX | GSM_TX1 | GSM_TX2;	/* low-active */
  36:board/compal_e86/rffe_dualband_e86.c **** 
  37:board/compal_e86/rffe_dualband_e86.c **** #ifdef CONFIG_TX_ENABLE
  38:board/compal_e86/rffe_dualband_e86.c **** 	/* Then we selectively set the bits on, if required */
  39:board/compal_e86/rffe_dualband_e86.c **** 	if (tx) {
  37              		.loc 1 39 0
  38 0014 000055E3 		cmp	r5, #0
  34:board/compal_e86/rffe_dualband_e86.c **** 	tspact &= ~(PA_ENABLE);
  39              		.loc 1 34 0
  40 0018 033000E0 		and	r3, r0, r3
  41              	.LVL2:
  35:board/compal_e86/rffe_dualband_e86.c **** 	tspact |=  DCS_TX | GSM_TX1 | GSM_TX2;	/* low-active */
  42              		.loc 1 35 0
  43 001c 510F83E3 		orr	r0, r3, #324
  44              	.LVL3:
  45              		.loc 1 39 0
  46 0020 0400000A 		beq	.L2
  40:board/compal_e86/rffe_dualband_e86.c **** 		if (band == GSM_BAND_850 || band == GSM_BAND_900)
  47              		.loc 1 40 0
  48 0024 014044E2 		sub	r4, r4, #1
  49              	.LVL4:
  50 0028 010054E3 		cmp	r4, #1
  41:board/compal_e86/rffe_dualband_e86.c **** 			tspact &= ~(GSM_TX1 | GSM_TX2);
  51              		.loc 1 41 0
  52 002c 410FC093 		bicls	r0, r0, #260
  53              	.LVL5:
  42:board/compal_e86/rffe_dualband_e86.c **** 		else
  43:board/compal_e86/rffe_dualband_e86.c **** 			tspact &= ~DCS_TX;
  54              		.loc 1 43 0
  55 0030 4000C083 		bichi	r0, r0, #64
  56              	.LVL6:
  44:board/compal_e86/rffe_dualband_e86.c **** 		tspact |= PA_ENABLE;
  57              		.loc 1 44 0
  58 0034 020080E3 		orr	r0, r0, #2
  59              	.LVL7:
  60              	.L2:
  45:board/compal_e86/rffe_dualband_e86.c **** 	}
  46:board/compal_e86/rffe_dualband_e86.c **** #endif /* TRANSMIT_SUPPORT */
  47:board/compal_e86/rffe_dualband_e86.c **** 
  48:board/compal_e86/rffe_dualband_e86.c **** 	tsp_act_update(tspact);
  49:board/compal_e86/rffe_dualband_e86.c **** }
  61              		.loc 1 49 0
  62 0038 3040BDE8 		ldmfd	sp!, {r4, r5, lr}
  48:board/compal_e86/rffe_dualband_e86.c **** 	tsp_act_update(tspact);
  63              		.loc 1 48 0
  64 003c FEFFFFEA 		b	tsp_act_update
  65              	.LVL8:
  66              	.L6:
  67              		.align	2
  68              	.L5:
  69 0040 FDFF0000 		.word	65533
  70              		.cfi_endproc
  71              	.LFE3:
  73              		.section	.text.rffe_get_rx_ports,"ax",%progbits
  74              		.align	2
  75              		.global	rffe_get_rx_ports
  77              	rffe_get_rx_ports:
  78              	.LFB4:
  50:board/compal_e86/rffe_dualband_e86.c **** 
  51:board/compal_e86/rffe_dualband_e86.c **** /* Returns RF wiring */
  52:board/compal_e86/rffe_dualband_e86.c **** uint32_t rffe_get_rx_ports(void)
  53:board/compal_e86/rffe_dualband_e86.c **** {
  79              		.loc 1 53 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  54:board/compal_e86/rffe_dualband_e86.c **** 	return (1 << PORT_LO) | (1 << PORT_DCS1800);
  55:board/compal_e86/rffe_dualband_e86.c **** }
  84              		.loc 1 55 0
  85 0000 1100A0E3 		mov	r0, #17
  86 0004 1EFF2FE1 		bx	lr
  87              		.cfi_endproc
  88              	.LFE4:
  90              		.section	.text.rffe_get_tx_ports,"ax",%progbits
  91              		.align	2
  92              		.global	rffe_get_tx_ports
  94              	rffe_get_tx_ports:
  95              	.LFB5:
  56:board/compal_e86/rffe_dualband_e86.c **** 
  57:board/compal_e86/rffe_dualband_e86.c **** uint32_t rffe_get_tx_ports(void)
  58:board/compal_e86/rffe_dualband_e86.c **** {
  96              		.loc 1 58 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		@ link register save eliminated.
  59:board/compal_e86/rffe_dualband_e86.c **** 	return (1 << PORT_LO) | (1 << PORT_HI);
  60:board/compal_e86/rffe_dualband_e86.c **** }
 101              		.loc 1 60 0
 102 0000 0300A0E3 		mov	r0, #3
 103 0004 1EFF2FE1 		bx	lr
 104              		.cfi_endproc
 105              	.LFE5:
 107              		.section	.text.rffe_iq_swapped,"ax",%progbits
 108              		.align	2
 109              		.global	rffe_iq_swapped
 111              	rffe_iq_swapped:
 112              	.LFB6:
  61:board/compal_e86/rffe_dualband_e86.c **** 
  62:board/compal_e86/rffe_dualband_e86.c **** /* Returns need for IQ swap */
  63:board/compal_e86/rffe_dualband_e86.c **** int rffe_iq_swapped(uint16_t band_arfcn, int tx)
  64:board/compal_e86/rffe_dualband_e86.c **** {
 113              		.loc 1 64 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 118              	.LVL9:
 119              		.loc 1 64 0
 120 0000 0008A0E1 		mov	r0, r0, asl #16
 121              	.LVL10:
  65:board/compal_e86/rffe_dualband_e86.c **** 	return trf6151_iq_swapped(band_arfcn, tx);
 122              		.loc 1 65 0
 123 0004 2008A0E1 		mov	r0, r0, lsr #16
  66:board/compal_e86/rffe_dualband_e86.c **** }
 124              		.loc 1 66 0
  65:board/compal_e86/rffe_dualband_e86.c **** 	return trf6151_iq_swapped(band_arfcn, tx);
 125              		.loc 1 65 0
 126 0008 FEFFFFEA 		b	trf6151_iq_swapped
 127              		.cfi_endproc
 128              	.LFE6:
 130              		.section	.text.rffe_init,"ax",%progbits
 131              		.align	2
 132              		.global	rffe_init
 134              	rffe_init:
 135              	.LFB7:
  67:board/compal_e86/rffe_dualband_e86.c **** 
  68:board/compal_e86/rffe_dualband_e86.c **** 
  69:board/compal_e86/rffe_dualband_e86.c **** #define MCU_SW_TRACE	0xfffef00e
  70:board/compal_e86/rffe_dualband_e86.c **** #define ARM_CONF_REG	0xfffef006
  71:board/compal_e86/rffe_dualband_e86.c **** 
  72:board/compal_e86/rffe_dualband_e86.c **** void rffe_init(void)
  73:board/compal_e86/rffe_dualband_e86.c **** {
 136              		.loc 1 73 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
  74:board/compal_e86/rffe_dualband_e86.c **** 	uint16_t reg;
  75:board/compal_e86/rffe_dualband_e86.c **** 
  76:board/compal_e86/rffe_dualband_e86.c **** 	reg = readw(ARM_CONF_REG);
 140              		.loc 1 76 0
 141 0000 44309FE5 		ldr	r3, .L11
  77:board/compal_e86/rffe_dualband_e86.c **** 	reg &= ~ (1 << 5);	/* TSPACT6 I/O function, not nCS6 */
 142              		.loc 1 77 0
 143 0004 44209FE5 		ldr	r2, .L11+4
  76:board/compal_e86/rffe_dualband_e86.c **** 	reg = readw(ARM_CONF_REG);
 144              		.loc 1 76 0
 145 0008 B91F53E1 		ldrh	r1, [r3, #-249]
 146              	.LVL11:
 147              		.loc 1 77 0
 148 000c 022001E0 		and	r2, r1, r2
 149              	.LVL12:
  73:board/compal_e86/rffe_dualband_e86.c **** {
 150              		.loc 1 73 0
 151 0010 04E02DE5 		str	lr, [sp, #-4]!
 152              	.LCFI1:
 153              		.cfi_def_cfa_offset 4
  78:board/compal_e86/rffe_dualband_e86.c **** 	writew(reg, ARM_CONF_REG);
 154              		.loc 1 78 0
 155 0014 B92F43E1 		strh	r2, [r3, #-249]	@ movhi
  79:board/compal_e86/rffe_dualband_e86.c **** 
  80:board/compal_e86/rffe_dualband_e86.c **** 	reg = readw(MCU_SW_TRACE);
  81:board/compal_e86/rffe_dualband_e86.c **** 	reg &= ~(1 << 5);	/* TSPACT8 I/O function, not nMREQ */
 156              		.loc 1 81 0
 157 0018 30209FE5 		ldr	r2, .L11+4
 158              	.LVL13:
  80:board/compal_e86/rffe_dualband_e86.c **** 	reg = readw(MCU_SW_TRACE);
 159              		.loc 1 80 0
 160 001c B11F53E1 		ldrh	r1, [r3, #-241]
 161              	.LVL14:
  82:board/compal_e86/rffe_dualband_e86.c **** 	writew(reg, MCU_SW_TRACE);
  83:board/compal_e86/rffe_dualband_e86.c **** 
  84:board/compal_e86/rffe_dualband_e86.c **** 	/* Configure the TSPEN which is connected to the TWL3025 */
  85:board/compal_e86/rffe_dualband_e86.c **** 	tsp_setup(IOTA_STROBE, 1, 0, 0);
 162              		.loc 1 85 0
 163 0020 0000A0E3 		mov	r0, #0
  81:board/compal_e86/rffe_dualband_e86.c **** 	reg &= ~(1 << 5);	/* TSPACT8 I/O function, not nMREQ */
 164              		.loc 1 81 0
 165 0024 022001E0 		and	r2, r1, r2
 166              	.LVL15:
  82:board/compal_e86/rffe_dualband_e86.c **** 	writew(reg, MCU_SW_TRACE);
 167              		.loc 1 82 0
 168 0028 B12F43E1 		strh	r2, [r3, #-241]	@ movhi
 169              		.loc 1 85 0
 170 002c 0110A0E3 		mov	r1, #1
 171 0030 0020A0E1 		mov	r2, r0
 172              	.LVL16:
 173 0034 0030A0E1 		mov	r3, r0
 174              		.cfi_offset 14, -4
 175 0038 FEFFFFEB 		bl	tsp_setup
  86:board/compal_e86/rffe_dualband_e86.c **** 
  87:board/compal_e86/rffe_dualband_e86.c **** 	trf6151_init(RITA_STROBE, RITA_RESET);
 176              		.loc 1 87 0
 177 003c 0200A0E3 		mov	r0, #2
 178 0040 0110A0E3 		mov	r1, #1
  88:board/compal_e86/rffe_dualband_e86.c **** }
 179              		.loc 1 88 0
 180 0044 04E09DE4 		ldr	lr, [sp], #4
  87:board/compal_e86/rffe_dualband_e86.c **** 	trf6151_init(RITA_STROBE, RITA_RESET);
 181              		.loc 1 87 0
 182 0048 FEFFFFEA 		b	trf6151_init
 183              	.L12:
 184              		.align	2
 185              	.L11:
 186 004c FFF0FEFF 		.word	-69377
 187 0050 DFFF0000 		.word	65503
 188              		.cfi_endproc
 189              	.LFE7:
 191              		.section	.text.rffe_get_gain,"ax",%progbits
 192              		.align	2
 193              		.global	rffe_get_gain
 195              	rffe_get_gain:
 196              	.LFB8:
  89:board/compal_e86/rffe_dualband_e86.c **** 
  90:board/compal_e86/rffe_dualband_e86.c **** uint8_t rffe_get_gain(void)
  91:board/compal_e86/rffe_dualband_e86.c **** {
 197              		.loc 1 91 0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              		@ link register save eliminated.
  92:board/compal_e86/rffe_dualband_e86.c **** 	return trf6151_get_gain();
  93:board/compal_e86/rffe_dualband_e86.c **** }
 202              		.loc 1 93 0
  92:board/compal_e86/rffe_dualband_e86.c **** 	return trf6151_get_gain();
 203              		.loc 1 92 0
 204 0000 FEFFFFEA 		b	trf6151_get_gain
 205              		.cfi_endproc
 206              	.LFE8:
 208              		.section	.text.rffe_set_gain,"ax",%progbits
 209              		.align	2
 210              		.global	rffe_set_gain
 212              	rffe_set_gain:
 213              	.LFB9:
  94:board/compal_e86/rffe_dualband_e86.c **** 
  95:board/compal_e86/rffe_dualband_e86.c **** void rffe_set_gain(uint8_t dbm)
  96:board/compal_e86/rffe_dualband_e86.c **** {
 214              		.loc 1 96 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218              		@ link register save eliminated.
 219              	.LVL17:
 220              		.loc 1 96 0
 221 0000 FF0000E2 		and	r0, r0, #255
 222              	.LVL18:
  97:board/compal_e86/rffe_dualband_e86.c **** 	trf6151_set_gain(dbm);
  98:board/compal_e86/rffe_dualband_e86.c **** }
 223              		.loc 1 98 0
  97:board/compal_e86/rffe_dualband_e86.c **** 	trf6151_set_gain(dbm);
 224              		.loc 1 97 0
 225 0004 FEFFFFEA 		b	trf6151_set_gain
 226              		.cfi_endproc
 227              	.LFE9:
 229              		.section	.text.rffe_compute_gain,"ax",%progbits
 230              		.align	2
 231              		.global	rffe_compute_gain
 233              	rffe_compute_gain:
 234              	.LFB10:
  99:board/compal_e86/rffe_dualband_e86.c **** 
 100:board/compal_e86/rffe_dualband_e86.c **** const uint8_t system_inherent_gain = SYSTEM_INHERENT_GAIN;
 101:board/compal_e86/rffe_dualband_e86.c **** 
 102:board/compal_e86/rffe_dualband_e86.c **** /* Given the expected input level of exp_inp dBm/8 and the target of target_bb
 103:board/compal_e86/rffe_dualband_e86.c ****  * dBm8, configure the RF Frontend with the respective gain */
 104:board/compal_e86/rffe_dualband_e86.c **** void rffe_compute_gain(int16_t exp_inp, int16_t target_bb)
 105:board/compal_e86/rffe_dualband_e86.c **** {
 235              		.loc 1 105 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 240              	.LVL19:
 241              		.loc 1 105 0
 242 0000 0008A0E1 		mov	r0, r0, asl #16
 243              	.LVL20:
 244 0004 0118A0E1 		mov	r1, r1, asl #16
 245              	.LVL21:
 106:board/compal_e86/rffe_dualband_e86.c **** 	trf6151_compute_gain(exp_inp, target_bb);
 246              		.loc 1 106 0
 247 0008 4008A0E1 		mov	r0, r0, asr #16
 248 000c 4118A0E1 		mov	r1, r1, asr #16
 107:board/compal_e86/rffe_dualband_e86.c **** }
 249              		.loc 1 107 0
 106:board/compal_e86/rffe_dualband_e86.c **** 	trf6151_compute_gain(exp_inp, target_bb);
 250              		.loc 1 106 0
 251 0010 FEFFFFEA 		b	trf6151_compute_gain
 252              		.cfi_endproc
 253              	.LFE10:
 255              		.section	.text.rffe_rx_win_ctrl,"ax",%progbits
 256              		.align	2
 257              		.global	rffe_rx_win_ctrl
 259              	rffe_rx_win_ctrl:
 260              	.LFB11:
 108:board/compal_e86/rffe_dualband_e86.c **** 
 109:board/compal_e86/rffe_dualband_e86.c **** void rffe_rx_win_ctrl(int16_t exp_inp, int16_t target_bb)
 110:board/compal_e86/rffe_dualband_e86.c **** {
 261              		.loc 1 110 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 266              	.LVL22:
 111:board/compal_e86/rffe_dualband_e86.c **** 	/* FIXME */
 112:board/compal_e86/rffe_dualband_e86.c **** }
 267              		.loc 1 112 0
 268 0000 1EFF2FE1 		bx	lr
 269              		.cfi_endproc
 270              	.LFE11:
 272              		.global	system_inherent_gain
 273              		.section	.rodata
 276              	system_inherent_gain:
 277 0000 47       		.byte	71
 278              		.text
 279              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 rffe_dualband_e86.c
     /tmp/ccEw7v4T.s:12     .text.rffe_mode:0000000000000000 $a
     /tmp/ccEw7v4T.s:15     .text.rffe_mode:0000000000000000 rffe_mode
     /tmp/ccEw7v4T.s:69     .text.rffe_mode:0000000000000040 $d
     /tmp/ccEw7v4T.s:74     .text.rffe_get_rx_ports:0000000000000000 $a
     /tmp/ccEw7v4T.s:77     .text.rffe_get_rx_ports:0000000000000000 rffe_get_rx_ports
     /tmp/ccEw7v4T.s:91     .text.rffe_get_tx_ports:0000000000000000 $a
     /tmp/ccEw7v4T.s:94     .text.rffe_get_tx_ports:0000000000000000 rffe_get_tx_ports
     /tmp/ccEw7v4T.s:108    .text.rffe_iq_swapped:0000000000000000 $a
     /tmp/ccEw7v4T.s:111    .text.rffe_iq_swapped:0000000000000000 rffe_iq_swapped
     /tmp/ccEw7v4T.s:131    .text.rffe_init:0000000000000000 $a
     /tmp/ccEw7v4T.s:134    .text.rffe_init:0000000000000000 rffe_init
     /tmp/ccEw7v4T.s:186    .text.rffe_init:000000000000004c $d
     /tmp/ccEw7v4T.s:192    .text.rffe_get_gain:0000000000000000 $a
     /tmp/ccEw7v4T.s:195    .text.rffe_get_gain:0000000000000000 rffe_get_gain
     /tmp/ccEw7v4T.s:209    .text.rffe_set_gain:0000000000000000 $a
     /tmp/ccEw7v4T.s:212    .text.rffe_set_gain:0000000000000000 rffe_set_gain
     /tmp/ccEw7v4T.s:230    .text.rffe_compute_gain:0000000000000000 $a
     /tmp/ccEw7v4T.s:233    .text.rffe_compute_gain:0000000000000000 rffe_compute_gain
     /tmp/ccEw7v4T.s:256    .text.rffe_rx_win_ctrl:0000000000000000 $a
     /tmp/ccEw7v4T.s:259    .text.rffe_rx_win_ctrl:0000000000000000 rffe_rx_win_ctrl
     /tmp/ccEw7v4T.s:276    .rodata:0000000000000000 system_inherent_gain
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
tsp_act_state
tsp_act_update
trf6151_iq_swapped
tsp_setup
trf6151_init
trf6151_get_gain
trf6151_set_gain
trf6151_compute_gain
