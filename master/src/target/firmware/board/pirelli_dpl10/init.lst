   1              		.file	"init.c"
   9              	.Ltext0:
  10              		.cfi_sections	.debug_frame
  11              		.section	.text.board_init,"ax",%progbits
  12              		.align	2
  13              		.global	board_init
  15              	board_init:
  16              	.LFB53:
  17              		.file 1 "board/pirelli_dpl10/init.c"
   1:board/pirelli_dpl10/init.c **** /* Initialization for the Pirelli DP-L10 */
   2:board/pirelli_dpl10/init.c **** 
   3:board/pirelli_dpl10/init.c **** /* (C) 2010 by Harald Welte <laforge@gnumonks.org>
   4:board/pirelli_dpl10/init.c ****  * (C) 2011-12 by Steve Markgraf <steve@steve-m.de>
   5:board/pirelli_dpl10/init.c ****  *
   6:board/pirelli_dpl10/init.c ****  * All Rights Reserved
   7:board/pirelli_dpl10/init.c ****  *
   8:board/pirelli_dpl10/init.c ****  * This program is free software; you can redistribute it and/or modify
   9:board/pirelli_dpl10/init.c ****  * it under the terms of the GNU General Public License as published by
  10:board/pirelli_dpl10/init.c ****  * the Free Software Foundation; either version 2 of the License, or
  11:board/pirelli_dpl10/init.c ****  * (at your option) any later version.
  12:board/pirelli_dpl10/init.c ****  *
  13:board/pirelli_dpl10/init.c ****  * This program is distributed in the hope that it will be useful,
  14:board/pirelli_dpl10/init.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:board/pirelli_dpl10/init.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:board/pirelli_dpl10/init.c ****  * GNU General Public License for more details.
  17:board/pirelli_dpl10/init.c ****  *
  18:board/pirelli_dpl10/init.c ****  * You should have received a copy of the GNU General Public License along
  19:board/pirelli_dpl10/init.c ****  * with this program; if not, write to the Free Software Foundation, Inc.,
  20:board/pirelli_dpl10/init.c ****  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  21:board/pirelli_dpl10/init.c ****  *
  22:board/pirelli_dpl10/init.c ****  */
  23:board/pirelli_dpl10/init.c **** 
  24:board/pirelli_dpl10/init.c **** #include <stdint.h>
  25:board/pirelli_dpl10/init.c **** #include <stdio.h>
  26:board/pirelli_dpl10/init.c **** 
  27:board/pirelli_dpl10/init.c **** #include <debug.h>
  28:board/pirelli_dpl10/init.c **** #include <ctors.h>
  29:board/pirelli_dpl10/init.c **** #include <memory.h>
  30:board/pirelli_dpl10/init.c **** #include <board.h>
  31:board/pirelli_dpl10/init.c **** #include <keypad.h>
  32:board/pirelli_dpl10/init.c **** #include <console.h>
  33:board/pirelli_dpl10/init.c **** #include <flash/cfi_flash.h>
  34:board/pirelli_dpl10/init.c **** 
  35:board/pirelli_dpl10/init.c **** #include <calypso/irq.h>
  36:board/pirelli_dpl10/init.c **** #include <calypso/clock.h>
  37:board/pirelli_dpl10/init.c **** #include <calypso/dma.h>
  38:board/pirelli_dpl10/init.c **** #include <calypso/rtc.h>
  39:board/pirelli_dpl10/init.c **** #include <calypso/timer.h>
  40:board/pirelli_dpl10/init.c **** #include <uart.h>
  41:board/pirelli_dpl10/init.c **** #include <calypso/backlight.h>
  42:board/pirelli_dpl10/init.c **** 
  43:board/pirelli_dpl10/init.c **** #include <comm/sercomm.h>
  44:board/pirelli_dpl10/init.c **** #include <comm/timer.h>
  45:board/pirelli_dpl10/init.c **** 
  46:board/pirelli_dpl10/init.c **** #include <abb/twl3025.h>
  47:board/pirelli_dpl10/init.c **** #include <rf/trf6151.h>
  48:board/pirelli_dpl10/init.c **** 
  49:board/pirelli_dpl10/init.c **** #include <fb/framebuffer.h>
  50:board/pirelli_dpl10/init.c **** #include "keymap.h"
  51:board/pirelli_dpl10/init.c **** 
  52:board/pirelli_dpl10/init.c **** #define ARMIO_LATCH_OUT 0xfffe4802
  53:board/pirelli_dpl10/init.c **** #define IO_CNTL_REG	0xfffe4804
  54:board/pirelli_dpl10/init.c **** #define ARM_CONF_REG	0xfffef006
  55:board/pirelli_dpl10/init.c **** #define ASIC_CONF_REG	0xfffef008
  56:board/pirelli_dpl10/init.c **** #define IO_CONF_REG	0xfffef00a
  57:board/pirelli_dpl10/init.c **** 
  58:board/pirelli_dpl10/init.c **** static void board_io_init(void)
  59:board/pirelli_dpl10/init.c **** {
  60:board/pirelli_dpl10/init.c **** 	uint16_t reg;
  61:board/pirelli_dpl10/init.c **** 
  62:board/pirelli_dpl10/init.c **** 	reg = readw(ASIC_CONF_REG);
  63:board/pirelli_dpl10/init.c **** 	/* Set function pins to I2C Mode */
  64:board/pirelli_dpl10/init.c **** 	reg |= ((1 << 12) | (1 << 7));		/* SCL / SDA */
  65:board/pirelli_dpl10/init.c **** 	/* TWL3025: Set SPI+RIF RX clock to rising edge */
  66:board/pirelli_dpl10/init.c **** 	reg |= (1 << 13) | (1 << 14);
  67:board/pirelli_dpl10/init.c **** 	reg &= ~(1 << 1);
  68:board/pirelli_dpl10/init.c **** 	writew(reg, ASIC_CONF_REG);
  69:board/pirelli_dpl10/init.c **** 
  70:board/pirelli_dpl10/init.c **** 	/* enable IO functionality */
  71:board/pirelli_dpl10/init.c **** 	reg = readw(IO_CONF_REG);
  72:board/pirelli_dpl10/init.c **** 	reg |= (1 << 9) | (1 << 4) | (1 << 3) | (1 << 2) | (1 << 1) | (1 << 0);
  73:board/pirelli_dpl10/init.c **** 	writew(reg, IO_CONF_REG);
  74:board/pirelli_dpl10/init.c **** 
  75:board/pirelli_dpl10/init.c **** 	/* set IO directions */
  76:board/pirelli_dpl10/init.c **** 	reg = readw(IO_CNTL_REG);
  77:board/pirelli_dpl10/init.c **** 	reg &= ~((1 << 7) | (1 << 4) | (1 << 1));
  78:board/pirelli_dpl10/init.c **** 	writew(reg, IO_CNTL_REG);
  79:board/pirelli_dpl10/init.c **** 
  80:board/pirelli_dpl10/init.c **** 	/* reset display controller, disable bypass mode, set nCS4 to display */
  81:board/pirelli_dpl10/init.c **** 	reg = readw(ARMIO_LATCH_OUT);
  82:board/pirelli_dpl10/init.c **** 	reg &= ~(1 << 4);
  83:board/pirelli_dpl10/init.c **** 	writew(reg, ARMIO_LATCH_OUT);
  84:board/pirelli_dpl10/init.c **** 	reg &= ~(1 << 7);
  85:board/pirelli_dpl10/init.c **** 	reg |= (1 << 4) | (1 << 1);
  86:board/pirelli_dpl10/init.c **** 	writew(reg, ARMIO_LATCH_OUT);
  87:board/pirelli_dpl10/init.c **** 
  88:board/pirelli_dpl10/init.c **** 	/* configure ADD(22), needed for second half of flash */
  89:board/pirelli_dpl10/init.c **** 	reg = readw(ARM_CONF_REG);
  90:board/pirelli_dpl10/init.c **** 	reg |= (1 << 3);
  91:board/pirelli_dpl10/init.c **** 	writew(reg, ARM_CONF_REG);
  92:board/pirelli_dpl10/init.c **** }
  93:board/pirelli_dpl10/init.c **** 
  94:board/pirelli_dpl10/init.c **** void board_init(int with_irq)
  95:board/pirelli_dpl10/init.c **** {
  18              		.loc 1 95 0
  19              		.cfi_startproc
  20              		@ args = 0, pretend = 0, frame = 0
  21              		@ frame_needed = 0, uses_anonymous_args = 0
  22              	.LVL0:
  23 0000 17402DE9 		stmfd	sp!, {r0, r1, r2, r4, lr}
  24              	.LCFI0:
  25              		.cfi_def_cfa_offset 20
  96:board/pirelli_dpl10/init.c **** 	/* Configure the memory interface */
  97:board/pirelli_dpl10/init.c **** 	calypso_mem_cfg(CALYPSO_nCS0, 4, CALYPSO_MEM_16bit, 1);
  26              		.loc 1 97 0
  27 0004 0120A0E3 		mov	r2, #1
  28              		.cfi_offset 14, -4
  29              		.cfi_offset 4, -8
  30              		.cfi_offset 2, -12
  31              		.cfi_offset 1, -16
  32              		.cfi_offset 0, -20
  95:board/pirelli_dpl10/init.c **** {
  33              		.loc 1 95 0
  34 0008 0040A0E1 		mov	r4, r0
  35              		.loc 1 97 0
  36 000c 0230A0E1 		mov	r3, r2
  37 0010 0000A0E3 		mov	r0, #0
  38              	.LVL1:
  39 0014 0410A0E3 		mov	r1, #4
  40 0018 FEFFFFEB 		bl	calypso_mem_cfg
  98:board/pirelli_dpl10/init.c **** 	calypso_mem_cfg(CALYPSO_nCS1, 4, CALYPSO_MEM_16bit, 1);
  41              		.loc 1 98 0
  42 001c 0120A0E3 		mov	r2, #1
  43 0020 0230A0E1 		mov	r3, r2
  44 0024 0200A0E3 		mov	r0, #2
  45 0028 0410A0E3 		mov	r1, #4
  46 002c FEFFFFEB 		bl	calypso_mem_cfg
  99:board/pirelli_dpl10/init.c **** 	calypso_mem_cfg(CALYPSO_nCS2, 5, CALYPSO_MEM_16bit, 1);
  47              		.loc 1 99 0
  48 0030 0120A0E3 		mov	r2, #1
  49 0034 0230A0E1 		mov	r3, r2
  50 0038 0400A0E3 		mov	r0, #4
  51 003c 0510A0E3 		mov	r1, #5
  52 0040 FEFFFFEB 		bl	calypso_mem_cfg
 100:board/pirelli_dpl10/init.c **** 	calypso_mem_cfg(CALYPSO_nCS3, 4, CALYPSO_MEM_16bit, 1);
  53              		.loc 1 100 0
  54 0044 0120A0E3 		mov	r2, #1
  55 0048 0230A0E1 		mov	r3, r2
  56 004c 0600A0E3 		mov	r0, #6
  57 0050 0410A0E3 		mov	r1, #4
  58 0054 FEFFFFEB 		bl	calypso_mem_cfg
 101:board/pirelli_dpl10/init.c **** 	calypso_mem_cfg(CALYPSO_CS4, 7, CALYPSO_MEM_16bit, 1);
  59              		.loc 1 101 0
  60 0058 0120A0E3 		mov	r2, #1
  61 005c 0230A0E1 		mov	r3, r2
  62 0060 0A00A0E3 		mov	r0, #10
  63 0064 0710A0E3 		mov	r1, #7
  64 0068 FEFFFFEB 		bl	calypso_mem_cfg
 102:board/pirelli_dpl10/init.c **** 	calypso_mem_cfg(CALYPSO_nCS6, 0, CALYPSO_MEM_32bit, 1);
  65              		.loc 1 102 0
  66 006c 0C00A0E3 		mov	r0, #12
  67 0070 0010A0E3 		mov	r1, #0
  68 0074 0220A0E3 		mov	r2, #2
  69 0078 0130A0E3 		mov	r3, #1
  70 007c FEFFFFEB 		bl	calypso_mem_cfg
 103:board/pirelli_dpl10/init.c **** 	calypso_mem_cfg(CALYPSO_nCS7, 0, CALYPSO_MEM_32bit, 0);
  71              		.loc 1 103 0
  72 0080 0010A0E3 		mov	r1, #0
  73 0084 0130A0E1 		mov	r3, r1
  74 0088 0800A0E3 		mov	r0, #8
  75 008c 0220A0E3 		mov	r2, #2
  76 0090 FEFFFFEB 		bl	calypso_mem_cfg
 104:board/pirelli_dpl10/init.c **** 
 105:board/pirelli_dpl10/init.c **** 	/* Set VTCXO_DIV2 = 1, configure PLL for 104 MHz and give ARM half of that */
 106:board/pirelli_dpl10/init.c **** 	calypso_clock_set(2, CALYPSO_PLL13_104_MHZ, ARM_MCLK_DIV_2);
  77              		.loc 1 106 0
  78 0094 0200A0E3 		mov	r0, #2
  79 0098 0020A0E1 		mov	r2, r0
  80 009c 021BA0E3 		mov	r1, #2048
  81 00a0 FEFFFFEB 		bl	calypso_clock_set
 107:board/pirelli_dpl10/init.c **** 
 108:board/pirelli_dpl10/init.c **** 	/* Configure the RHEA bridge with some sane default values */
 109:board/pirelli_dpl10/init.c **** 	calypso_rhea_cfg(0, 0, 0xff, 0, 1, 0, 0);
  82              		.loc 1 109 0
  83 00a4 0000A0E3 		mov	r0, #0
  84 00a8 0130A0E3 		mov	r3, #1
  85 00ac 0010A0E1 		mov	r1, r0
  86 00b0 00308DE5 		str	r3, [sp, #0]
  87 00b4 FF20A0E3 		mov	r2, #255
  88 00b8 0030A0E1 		mov	r3, r0
  89 00bc 04008DE5 		str	r0, [sp, #4]
  90 00c0 08008DE5 		str	r0, [sp, #8]
  91 00c4 FEFFFFEB 		bl	calypso_rhea_cfg
  92              	.LBB6:
  93              	.LBB7:
  62:board/pirelli_dpl10/init.c **** 	reg = readw(ASIC_CONF_REG);
  94              		.loc 1 62 0
  95 00c8 08319FE5 		ldr	r3, .L3
  96 00cc B72F53E1 		ldrh	r2, [r3, #-247]
  97              	.LVL2:
  66:board/pirelli_dpl10/init.c **** 	reg |= (1 << 13) | (1 << 14);
  98              		.loc 1 66 0
  99 00d0 072A82E3 		orr	r2, r2, #28672
 100              	.LVL3:
 101 00d4 802082E3 		orr	r2, r2, #128
 102              	.LVL4:
  67:board/pirelli_dpl10/init.c **** 	reg &= ~(1 << 1);
 103              		.loc 1 67 0
 104 00d8 0220C2E3 		bic	r2, r2, #2
 105              	.LVL5:
  68:board/pirelli_dpl10/init.c **** 	writew(reg, ASIC_CONF_REG);
 106              		.loc 1 68 0
 107 00dc B72F43E1 		strh	r2, [r3, #-247]	@ movhi
  71:board/pirelli_dpl10/init.c **** 	reg = readw(IO_CONF_REG);
 108              		.loc 1 71 0
 109 00e0 B52F53E1 		ldrh	r2, [r3, #-245]
 110              	.LVL6:
  72:board/pirelli_dpl10/init.c **** 	reg |= (1 << 9) | (1 << 4) | (1 << 3) | (1 << 2) | (1 << 1) | (1 << 0);
 111              		.loc 1 72 0
 112 00e4 872F82E3 		orr	r2, r2, #540
 113              	.LVL7:
 114 00e8 032082E3 		orr	r2, r2, #3
 115              	.LVL8:
  73:board/pirelli_dpl10/init.c **** 	writew(reg, IO_CONF_REG);
 116              		.loc 1 73 0
 117 00ec B52F43E1 		strh	r2, [r3, #-245]	@ movhi
  76:board/pirelli_dpl10/init.c **** 	reg = readw(IO_CNTL_REG);
 118              		.loc 1 76 0
 119 00f0 E4209FE5 		ldr	r2, .L3+4
 120              	.LVL9:
  77:board/pirelli_dpl10/init.c **** 	reg &= ~((1 << 7) | (1 << 4) | (1 << 1));
 121              		.loc 1 77 0
 122 00f4 E4109FE5 		ldr	r1, .L3+8
  76:board/pirelli_dpl10/init.c **** 	reg = readw(IO_CNTL_REG);
 123              		.loc 1 76 0
 124 00f8 BB0F52E1 		ldrh	r0, [r2, #-251]
 125              	.LVL10:
  77:board/pirelli_dpl10/init.c **** 	reg &= ~((1 << 7) | (1 << 4) | (1 << 1));
 126              		.loc 1 77 0
 127 00fc 011000E0 		and	r1, r0, r1
 128              	.LVL11:
  78:board/pirelli_dpl10/init.c **** 	writew(reg, IO_CNTL_REG);
 129              		.loc 1 78 0
 130 0100 BB1F42E1 		strh	r1, [r2, #-251]	@ movhi
  82:board/pirelli_dpl10/init.c **** 	reg &= ~(1 << 4);
 131              		.loc 1 82 0
 132 0104 D8109FE5 		ldr	r1, .L3+12
 133              	.LVL12:
  81:board/pirelli_dpl10/init.c **** 	reg = readw(ARMIO_LATCH_OUT);
 134              		.loc 1 81 0
 135 0108 BD0F52E1 		ldrh	r0, [r2, #-253]
 136              	.LVL13:
  82:board/pirelli_dpl10/init.c **** 	reg &= ~(1 << 4);
 137              		.loc 1 82 0
 138 010c 011000E0 		and	r1, r0, r1
 139              	.LVL14:
  83:board/pirelli_dpl10/init.c **** 	writew(reg, ARMIO_LATCH_OUT);
 140              		.loc 1 83 0
 141 0110 BD1F42E1 		strh	r1, [r2, #-253]	@ movhi
  84:board/pirelli_dpl10/init.c **** 	reg &= ~(1 << 7);
 142              		.loc 1 84 0
 143 0114 8010C1E3 		bic	r1, r1, #128
 144              	.LVL15:
  85:board/pirelli_dpl10/init.c **** 	reg |= (1 << 4) | (1 << 1);
 145              		.loc 1 85 0
 146 0118 121081E3 		orr	r1, r1, #18
 147              	.LVL16:
  86:board/pirelli_dpl10/init.c **** 	writew(reg, ARMIO_LATCH_OUT);
 148              		.loc 1 86 0
 149 011c BD1F42E1 		strh	r1, [r2, #-253]	@ movhi
  89:board/pirelli_dpl10/init.c **** 	reg = readw(ARM_CONF_REG);
 150              		.loc 1 89 0
 151 0120 B92F53E1 		ldrh	r2, [r3, #-249]
 152              	.LVL17:
  90:board/pirelli_dpl10/init.c **** 	reg |= (1 << 3);
 153              		.loc 1 90 0
 154 0124 082082E3 		orr	r2, r2, #8
 155              	.LVL18:
  91:board/pirelli_dpl10/init.c **** 	writew(reg, ARM_CONF_REG);
 156              		.loc 1 91 0
 157 0128 B92F43E1 		strh	r2, [r3, #-249]	@ movhi
 158              	.LBE7:
 159              	.LBE6:
 110:board/pirelli_dpl10/init.c **** 
 111:board/pirelli_dpl10/init.c **** 	/* Initialize board-specific GPIO */
 112:board/pirelli_dpl10/init.c **** 	board_io_init();
 113:board/pirelli_dpl10/init.c **** 
 114:board/pirelli_dpl10/init.c **** 	/* Enable bootrom mapping to route exception vectors to RAM */
 115:board/pirelli_dpl10/init.c **** 	calypso_bootrom(with_irq);
 160              		.loc 1 115 0
 161 012c 0400A0E1 		mov	r0, r4
 162 0130 FEFFFFEB 		bl	calypso_bootrom
 163              	.LVL19:
 116:board/pirelli_dpl10/init.c **** 	calypso_exceptions_install();
 164              		.loc 1 116 0
 165 0134 FEFFFFEB 		bl	calypso_exceptions_install
 117:board/pirelli_dpl10/init.c **** 
 118:board/pirelli_dpl10/init.c **** 	/* Initialize interrupt controller */
 119:board/pirelli_dpl10/init.c **** 	if (with_irq)
 166              		.loc 1 119 0
 167 0138 000054E3 		cmp	r4, #0
 120:board/pirelli_dpl10/init.c **** 		irq_init();
 168              		.loc 1 120 0
 169 013c FEFFFF1B 		blne	irq_init
 170              	.L2:
 121:board/pirelli_dpl10/init.c **** 
 122:board/pirelli_dpl10/init.c **** 	sercomm_bind_uart(UART_IRDA);
 171              		.loc 1 122 0
 172 0140 0000A0E3 		mov	r0, #0
 173 0144 FEFFFFEB 		bl	sercomm_bind_uart
 123:board/pirelli_dpl10/init.c **** 	cons_bind_uart(UART_MODEM);
 124:board/pirelli_dpl10/init.c **** 
 125:board/pirelli_dpl10/init.c **** 	/* initialize IRDA UART to be used for sercomm */
 126:board/pirelli_dpl10/init.c **** 	uart_init(UART_IRDA, with_irq);
 174              		.loc 1 126 0
 175 0148 FF4004E2 		and	r4, r4, #255
 176              	.LVL20:
 123:board/pirelli_dpl10/init.c **** 	cons_bind_uart(UART_MODEM);
 177              		.loc 1 123 0
 178 014c 0100A0E3 		mov	r0, #1
 179 0150 FEFFFFEB 		bl	cons_bind_uart
 180              		.loc 1 126 0
 181 0154 0410A0E1 		mov	r1, r4
 182 0158 0000A0E3 		mov	r0, #0
 183 015c FEFFFFEB 		bl	uart_init
 127:board/pirelli_dpl10/init.c **** 	uart_baudrate(UART_IRDA, UART_115200);
 184              		.loc 1 127 0
 185 0160 0210A0E3 		mov	r1, #2
 186 0164 0000A0E3 		mov	r0, #0
 187 0168 FEFFFFEB 		bl	uart_baudrate
 128:board/pirelli_dpl10/init.c **** 
 129:board/pirelli_dpl10/init.c **** 	/* Initialize MODEM UART to be used for old-school console code. */
 130:board/pirelli_dpl10/init.c **** 	uart_init(UART_MODEM, with_irq);
 188              		.loc 1 130 0
 189 016c 0410A0E1 		mov	r1, r4
 190 0170 0100A0E3 		mov	r0, #1
 191 0174 FEFFFFEB 		bl	uart_init
 131:board/pirelli_dpl10/init.c **** 	uart_baudrate(UART_MODEM, UART_115200);
 192              		.loc 1 131 0
 193 0178 0210A0E3 		mov	r1, #2
 194 017c 0100A0E3 		mov	r0, #1
 195 0180 FEFFFFEB 		bl	uart_baudrate
 132:board/pirelli_dpl10/init.c **** 
 133:board/pirelli_dpl10/init.c **** 	/* Initialize hardware timers */
 134:board/pirelli_dpl10/init.c **** 	hwtimer_init();
 196              		.loc 1 134 0
 197 0184 FEFFFFEB 		bl	hwtimer_init
 135:board/pirelli_dpl10/init.c **** 
 136:board/pirelli_dpl10/init.c **** 	/* Initialize DMA controller */
 137:board/pirelli_dpl10/init.c **** 	dma_init();
 198              		.loc 1 137 0
 199 0188 FEFFFFEB 		bl	dma_init
 138:board/pirelli_dpl10/init.c **** 
 139:board/pirelli_dpl10/init.c **** 	/* Initialize real time clock */
 140:board/pirelli_dpl10/init.c **** 	rtc_init();
 200              		.loc 1 140 0
 201 018c FEFFFFEB 		bl	rtc_init
 141:board/pirelli_dpl10/init.c **** 
 142:board/pirelli_dpl10/init.c **** 	/* Initialize system timers (uses hwtimer 2) */
 143:board/pirelli_dpl10/init.c **** 	timer_init();
 202              		.loc 1 143 0
 203 0190 FEFFFFEB 		bl	timer_init
 144:board/pirelli_dpl10/init.c **** 
 145:board/pirelli_dpl10/init.c **** 	/* Initialize LCD driver and backlight (0 is max, 255 min brightness) */
 146:board/pirelli_dpl10/init.c **** 	bl_mode_pwl(1);
 204              		.loc 1 146 0
 205 0194 0100A0E3 		mov	r0, #1
 206 0198 FEFFFFEB 		bl	bl_mode_pwl
 147:board/pirelli_dpl10/init.c **** 	bl_level(50);
 207              		.loc 1 147 0
 208 019c 3200A0E3 		mov	r0, #50
 209 01a0 FEFFFFEB 		bl	bl_level
 210              	.LBB8:
 211              	.LBB9:
 212              		.file 2 "include/fb/framebuffer.h"
   1:include/fb/framebuffer.h **** #ifndef _FB_FRAMEBUFFER_H
   2:include/fb/framebuffer.h **** #define _FB_FRAMEBUFFER_H
   3:include/fb/framebuffer.h **** 
   4:include/fb/framebuffer.h **** #include <fb/font.h>
   5:include/fb/framebuffer.h **** #include <stdint.h>
   6:include/fb/framebuffer.h **** 
   7:include/fb/framebuffer.h **** /* color is encoded as <special><red><green><blue> */
   8:include/fb/framebuffer.h **** /* if a color is "special", then the RGB components most likely
   9:include/fb/framebuffer.h ****    don't make sense. Use "special" colours when you have to
  10:include/fb/framebuffer.h ****    mask out bits with transparency or you have to encode
  11:include/fb/framebuffer.h ****    colours in a fixed color palette... */
  12:include/fb/framebuffer.h **** 
  13:include/fb/framebuffer.h **** #define FB_COLOR_WHITE		0x00ffffffU
  14:include/fb/framebuffer.h **** #define FB_COLOR_BLACK		0x00000000U
  15:include/fb/framebuffer.h **** #define FB_COLOR_TRANSP		0x01ffffffU
  16:include/fb/framebuffer.h **** 
  17:include/fb/framebuffer.h **** #define FB_COLOR_RGB(r,g,b) ((((r) & 0xff)<<16)|(((g)&0xff)<<8)|((b)&0xff))
  18:include/fb/framebuffer.h **** #define FB_COLOR_RED		FB_COLOR_RGB(0xff,0x00,0x00)
  19:include/fb/framebuffer.h **** #define FB_COLOR_GREEN		FB_COLOR_RGB(0x00,0xff,0x00)
  20:include/fb/framebuffer.h **** #define FB_COLOR_BLUE		FB_COLOR_RGB(0x00,0x00,0xff)
  21:include/fb/framebuffer.h **** 
  22:include/fb/framebuffer.h **** /* encode */
  23:include/fb/framebuffer.h **** 
  24:include/fb/framebuffer.h **** /* decode */
  25:include/fb/framebuffer.h **** #define FB_COLOR_IS_SPECIAL(v)     (!!((v) & 0xff000000U))
  26:include/fb/framebuffer.h **** #define FB_COLOR_TO_R(v)		(((v)>>16) & 0xff)
  27:include/fb/framebuffer.h **** #define FB_COLOR_TO_G(v)		(((v)>> 8) & 0xff)
  28:include/fb/framebuffer.h **** #define FB_COLOR_TO_B(v)		( (v)      & 0xff)
  29:include/fb/framebuffer.h **** 
  30:include/fb/framebuffer.h **** struct framebuffer {
  31:include/fb/framebuffer.h **** 	char name[8];				// keep it short!
  32:include/fb/framebuffer.h **** 	void (*init)();				// (re)initialize
  33:include/fb/framebuffer.h **** 	void (*clear)();			// clear display
  34:include/fb/framebuffer.h **** 	void (*boxto)(uint16_t x,uint16_t y);	// draw box to xy
  35:include/fb/framebuffer.h **** 	void (*lineto)(uint16_t x,uint16_t y);	// draw line to xy
  36:include/fb/framebuffer.h **** 	int (*putstr)(char *c,int maxwidth);	// put text in current font to fb
  37:include/fb/framebuffer.h **** 	void (*flush)();			// flush changes
  38:include/fb/framebuffer.h **** 
  39:include/fb/framebuffer.h **** 	uint16_t width,height;			// width/height of fb
  40:include/fb/framebuffer.h **** 	uint16_t cursor_x,cursor_y;		// current cursor
  41:include/fb/framebuffer.h **** 	uint32_t fg_color,bg_color;		// current fg/bg color
  42:include/fb/framebuffer.h **** 	enum fb_font_id font;			// current font
  43:include/fb/framebuffer.h **** };
  44:include/fb/framebuffer.h **** 
  45:include/fb/framebuffer.h **** /* there is a single framebuffer, the specific driver defines
  46:include/fb/framebuffer.h ****    the "framebuffer" symbol */
  47:include/fb/framebuffer.h **** extern struct framebuffer *framebuffer;
  48:include/fb/framebuffer.h **** 
  49:include/fb/framebuffer.h **** static inline void
  50:include/fb/framebuffer.h **** fb_init(){
  51:include/fb/framebuffer.h **** 	framebuffer->init();
 213              		.loc 2 51 0
 214 01a4 3C309FE5 		ldr	r3, .L3+16
 215 01a8 003093E5 		ldr	r3, [r3, #0]
 216 01ac 0FE0A0E1 		mov	lr, pc
 217 01b0 08F093E5 		ldr	pc, [r3, #8]
 218              	.LBE9:
 219              	.LBE8:
 148:board/pirelli_dpl10/init.c **** 
 149:board/pirelli_dpl10/init.c **** 	fb_init();
 150:board/pirelli_dpl10/init.c **** 
 151:board/pirelli_dpl10/init.c **** 	/* Initialize keypad driver */
 152:board/pirelli_dpl10/init.c **** 	keypad_init(keymap, with_irq);
 220              		.loc 1 152 0
 221 01b4 0410A0E1 		mov	r1, r4
 222 01b8 2C009FE5 		ldr	r0, .L3+20
 223 01bc FEFFFFEB 		bl	keypad_init
 153:board/pirelli_dpl10/init.c **** 
 154:board/pirelli_dpl10/init.c **** 	/* Initialize ABB driver (uses SPI) */
 155:board/pirelli_dpl10/init.c **** 	twl3025_init();
 224              		.loc 1 155 0
 225 01c0 FEFFFFEB 		bl	twl3025_init
 156:board/pirelli_dpl10/init.c **** 
 157:board/pirelli_dpl10/init.c **** 	/* enable LEDB driver of Iota for keypad backlight */
 158:board/pirelli_dpl10/init.c **** 	twl3025_reg_write(AUXLED, 0x02);
 226              		.loc 1 158 0
 227 01c4 9800A0E3 		mov	r0, #152
 228 01c8 0210A0E3 		mov	r1, #2
 159:board/pirelli_dpl10/init.c **** }
 229              		.loc 1 159 0
 230 01cc 0CD08DE2 		add	sp, sp, #12
 231 01d0 1040BDE8 		ldmfd	sp!, {r4, lr}
 158:board/pirelli_dpl10/init.c **** 	twl3025_reg_write(AUXLED, 0x02);
 232              		.loc 1 158 0
 233 01d4 FEFFFFEA 		b	twl3025_reg_write
 234              	.L4:
 235              		.align	2
 236              	.L3:
 237 01d8 FFF0FEFF 		.word	-69377
 238 01dc FF48FEFF 		.word	-112385
 239 01e0 6DFF0000 		.word	65389
 240 01e4 EFFF0000 		.word	65519
 241 01e8 00000000 		.word	framebuffer
 242 01ec 00000000 		.word	.LANCHOR0
 243              		.cfi_endproc
 244              	.LFE53:
 246              		.section	.rodata
 247              		.align	2
 248              		.set	.LANCHOR0,. + 0
 251              	keymap:
 252 0000 12       		.byte	18
 253 0001 04       		.byte	4
 254 0002 03       		.byte	3
 255 0003 02       		.byte	2
 256 0004 09       		.byte	9
 257 0005 08       		.byte	8
 258 0006 07       		.byte	7
 259 0007 0E       		.byte	14
 260 0008 0D       		.byte	13
 261 0009 0C       		.byte	12
 262 000a 13       		.byte	19
 263 000b 11       		.byte	17
 264 000c 00       		.byte	0
 265 000d 01       		.byte	1
 266 000e 06       		.byte	6
 267 000f 0F       		.byte	15
 268 0010 10       		.byte	16
 269 0011 05       		.byte	5
 270 0012 0A       		.byte	10
 271 0013 0B       		.byte	11
 272 0014 17       		.byte	23
 273 0015 16       		.byte	22
 274 0016 15       		.byte	21
 275 0017 00       		.text
 276              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 init.c
     /tmp/ccsqDAlo.s:12     .text.board_init:0000000000000000 $a
     /tmp/ccsqDAlo.s:15     .text.board_init:0000000000000000 board_init
     /tmp/ccsqDAlo.s:237    .text.board_init:00000000000001d8 $d
     /tmp/ccsqDAlo.s:247    .rodata:0000000000000000 $d
     /tmp/ccsqDAlo.s:251    .rodata:0000000000000000 keymap
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
calypso_mem_cfg
calypso_clock_set
calypso_rhea_cfg
calypso_bootrom
calypso_exceptions_install
irq_init
sercomm_bind_uart
cons_bind_uart
uart_init
uart_baudrate
hwtimer_init
dma_init
rtc_init
timer_init
bl_mode_pwl
bl_level
keypad_init
twl3025_init
twl3025_reg_write
framebuffer
