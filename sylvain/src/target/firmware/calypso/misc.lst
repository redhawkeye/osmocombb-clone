   1              		.file	"misc.c"
   9              	.Ltext0:
  10              		.cfi_sections	.debug_frame
  11              		.section	.text.memdump_range,"ax",%progbits
  12              		.align	2
  13              		.global	memdump_range
  15              	memdump_range:
  16              	.LFB0:
  17              		.file 1 "calypso/misc.c"
   1:calypso/misc.c **** 
   2:calypso/misc.c **** #include <stdint.h>
   3:calypso/misc.c **** #include <stdio.h>
   4:calypso/misc.c **** #include <memory.h>
   5:calypso/misc.c **** 
   6:calypso/misc.c **** /* dump a memory range */
   7:calypso/misc.c **** void memdump_range(unsigned int *ptr, unsigned int len)
   8:calypso/misc.c **** {
  18              		.loc 1 8 0
  19              		.cfi_startproc
  20              		@ args = 0, pretend = 0, frame = 0
  21              		@ frame_needed = 0, uses_anonymous_args = 0
  22              	.LVL0:
   9:calypso/misc.c **** 	unsigned int *end = ptr + (len/4);
  23              		.loc 1 9 0
  24 0000 0310C1E3 		bic	r1, r1, #3
  25              	.LVL1:
   8:calypso/misc.c **** {
  26              		.loc 1 8 0
  27 0004 F0452DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, sl, lr}
  28              	.LCFI0:
  29              		.cfi_def_cfa_offset 28
  30              		.loc 1 9 0
  31 0008 01A080E0 		add	sl, r0, r1
  32              		.cfi_offset 14, -4
  33              		.cfi_offset 10, -8
  34              		.cfi_offset 8, -12
  35              		.cfi_offset 7, -16
  36              		.cfi_offset 6, -20
  37              		.cfi_offset 5, -24
  38              		.cfi_offset 4, -28
  39              	.LVL2:
  10:calypso/misc.c **** 	unsigned int *tmp;
  11:calypso/misc.c **** 
  12:calypso/misc.c **** 	for (tmp = ptr; tmp < end; tmp += 8) {
  40              		.loc 1 12 0
  41 000c 0040A0E1 		mov	r4, r0
  42              	.LBB2:
  13:calypso/misc.c **** 		int i;
  14:calypso/misc.c **** 		printf("%08X: ", (unsigned int) tmp);
  15:calypso/misc.c **** 
  16:calypso/misc.c **** 		for (i = 0; i < 8; i++)
  17:calypso/misc.c **** 			printf("%08X %s", *(tmp+i), i == 3 ? " " : "");
  43              		.loc 1 17 0
  44 0010 54809FE5 		ldr	r8, .L8
  45 0014 54709FE5 		ldr	r7, .L8+4
  46              	.LBE2:
  12:calypso/misc.c **** 	for (tmp = ptr; tmp < end; tmp += 8) {
  47              		.loc 1 12 0
  48 0018 100000EA 		b	.L2
  49              	.LVL3:
  50              	.L5:
  51              	.LBB3:
  14:calypso/misc.c **** 		printf("%08X: ", (unsigned int) tmp);
  52              		.loc 1 14 0
  53 001c 50009FE5 		ldr	r0, .L8+8
  54 0020 0410A0E1 		mov	r1, r4
  55 0024 FEFFFFEB 		bl	printf
  56              	.LVL4:
  57 0028 0460A0E1 		mov	r6, r4
  16:calypso/misc.c **** 		for (i = 0; i < 8; i++)
  58              		.loc 1 16 0
  59 002c 0050A0E3 		mov	r5, #0
  60              	.LVL5:
  61              	.L4:
  62              		.loc 1 17 0
  63 0030 030055E3 		cmp	r5, #3
  64 0034 0820A011 		movne	r2, r8
  65 0038 0720A001 		moveq	r2, r7
  66 003c 34009FE5 		ldr	r0, .L8+12
  67 0040 041096E4 		ldr	r1, [r6], #4
  16:calypso/misc.c **** 		for (i = 0; i < 8; i++)
  68              		.loc 1 16 0
  69 0044 015085E2 		add	r5, r5, #1
  70              		.loc 1 17 0
  71 0048 FEFFFFEB 		bl	printf
  72              	.LVL6:
  16:calypso/misc.c **** 		for (i = 0; i < 8; i++)
  73              		.loc 1 16 0
  74 004c 080055E3 		cmp	r5, #8
  75 0050 F6FFFF1A 		bne	.L4
  18:calypso/misc.c **** 
  19:calypso/misc.c **** 		putchar('\n');
  76              		.loc 1 19 0
  77 0054 0A00A0E3 		mov	r0, #10
  78 0058 FEFFFFEB 		bl	sercomm_putchar
  79              	.LBE3:
  12:calypso/misc.c **** 	for (tmp = ptr; tmp < end; tmp += 8) {
  80              		.loc 1 12 0
  81 005c 204084E2 		add	r4, r4, #32
  82              	.LVL7:
  83              	.L2:
  12:calypso/misc.c **** 	for (tmp = ptr; tmp < end; tmp += 8) {
  84              		.loc 1 12 0 is_stmt 0 discriminator 1
  85 0060 0A0054E1 		cmp	r4, sl
  86 0064 ECFFFF3A 		bcc	.L5
  20:calypso/misc.c **** 	}
  21:calypso/misc.c **** }
  87              		.loc 1 21 0 is_stmt 1
  88 0068 F085BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, sl, pc}
  89              	.L9:
  90              		.align	2
  91              	.L8:
  92 006c 02000000 		.word	.LC1
  93 0070 00000000 		.word	.LC0
  94 0074 03000000 		.word	.LC2
  95 0078 0A000000 		.word	.LC3
  96              		.cfi_endproc
  97              	.LFE0:
  99              		.section	.text.dump_mem,"ax",%progbits
 100              		.align	2
 101              		.global	dump_mem
 103              	dump_mem:
 104              	.LFB1:
  22:calypso/misc.c **** 
  23:calypso/misc.c **** #define KBIT 1024
  24:calypso/misc.c **** #define	MBIT (1024*KBIT)
  25:calypso/misc.c **** void dump_mem(void)
  26:calypso/misc.c **** {
 105              		.loc 1 26 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109 0000 04E02DE5 		str	lr, [sp, #-4]!
 110              	.LCFI1:
 111              		.cfi_def_cfa_offset 4
  27:calypso/misc.c **** 	puts("Dump 64kBits of internal ROM\n");
 112              		.loc 1 27 0
 113 0004 4C009FE5 		ldr	r0, .L11
 114              		.cfi_offset 14, -4
 115 0008 FEFFFFEB 		bl	puts
  28:calypso/misc.c **** 	memdump_range((void *)0x03800000, 64*KBIT/8);
 116              		.loc 1 28 0
 117 000c 021AA0E3 		mov	r1, #8192
 118 0010 0E05A0E3 		mov	r0, #58720256
 119 0014 FEFFFFEB 		bl	memdump_range
  29:calypso/misc.c **** 
  30:calypso/misc.c **** 	puts("Dump 8Mbits of external flash\n");
 120              		.loc 1 30 0
 121 0018 3C009FE5 		ldr	r0, .L11+4
 122 001c FEFFFFEB 		bl	puts
  31:calypso/misc.c **** 	memdump_range((void *)0x00000000, 8*MBIT/8);
 123              		.loc 1 31 0
 124 0020 0116A0E3 		mov	r1, #1048576
 125 0024 0000A0E3 		mov	r0, #0
 126 0028 FEFFFFEB 		bl	memdump_range
  32:calypso/misc.c **** 
  33:calypso/misc.c **** 	puts("Dump 2Mbits of internal RAM\n");
 127              		.loc 1 33 0
 128 002c 2C009FE5 		ldr	r0, .L11+8
 129 0030 FEFFFFEB 		bl	puts
  34:calypso/misc.c **** 	memdump_range((void *)0x00800000, 2*MBIT/8);
 130              		.loc 1 34 0
 131 0034 0117A0E3 		mov	r1, #262144
 132 0038 0205A0E3 		mov	r0, #8388608
 133 003c FEFFFFEB 		bl	memdump_range
  35:calypso/misc.c **** 
  36:calypso/misc.c **** 	puts("Dump 2Mbits of external RAM\n");
 134              		.loc 1 36 0
 135 0040 1C009FE5 		ldr	r0, .L11+12
 136 0044 FEFFFFEB 		bl	puts
  37:calypso/misc.c **** 	memdump_range((void *)0x01000000, 2*MBIT/8);
 137              		.loc 1 37 0
 138 0048 0104A0E3 		mov	r0, #16777216
 139 004c 0117A0E3 		mov	r1, #262144
  38:calypso/misc.c **** }
 140              		.loc 1 38 0
 141 0050 04E09DE4 		ldr	lr, [sp], #4
  37:calypso/misc.c **** 	memdump_range((void *)0x01000000, 2*MBIT/8);
 142              		.loc 1 37 0
 143 0054 FEFFFFEA 		b	memdump_range
 144              	.L12:
 145              		.align	2
 146              	.L11:
 147 0058 12000000 		.word	.LC4
 148 005c 30000000 		.word	.LC5
 149 0060 4F000000 		.word	.LC6
 150 0064 6C000000 		.word	.LC7
 151              		.cfi_endproc
 152              	.LFE1:
 154              		.section	.text.dump_dev_id,"ax",%progbits
 155              		.align	2
 156              		.global	dump_dev_id
 158              	dump_dev_id:
 159              	.LFB2:
  39:calypso/misc.c **** 
  40:calypso/misc.c **** #define REG_DEV_ID_CODE 	0xfffef000
  41:calypso/misc.c **** #define REG_DEV_VER_CODE	0xfffef002
  42:calypso/misc.c **** #define REG_DEV_ARMVER_CODE	0xfffffe00
  43:calypso/misc.c **** #define REG_cDSP_ID_CODE	0xfffffe02
  44:calypso/misc.c **** #define REG_DIE_ID_CODE		0xfffef010
  45:calypso/misc.c **** 
  46:calypso/misc.c **** void dump_dev_id(void)
  47:calypso/misc.c **** {
 160              		.loc 1 47 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164 0000 30402DE9 		stmfd	sp!, {r4, r5, lr}
 165              	.LCFI2:
 166              		.cfi_def_cfa_offset 12
  48:calypso/misc.c **** 	int i;
  49:calypso/misc.c **** 
  50:calypso/misc.c **** 	printf("Device ID code: 0x%04x\n", readw(REG_DEV_ID_CODE));
 167              		.loc 1 50 0
 168 0004 64409FE5 		ldr	r4, .L14
 169              		.cfi_offset 14, -4
 170              		.cfi_offset 5, -8
 171              		.cfi_offset 4, -12
 172 0008 64009FE5 		ldr	r0, .L14+4
 173 000c BF1F54E1 		ldrh	r1, [r4, #-255]
 174 0010 FEFFFFEB 		bl	printf
  51:calypso/misc.c **** 	printf("Device Version code: 0x%04x\n", readw(REG_DEV_VER_CODE));
 175              		.loc 1 51 0
 176 0014 BD1F54E1 		ldrh	r1, [r4, #-253]
 177 0018 58009FE5 		ldr	r0, .L14+8
  52:calypso/misc.c **** 	printf("ARM ID code: 0x%04x\n", readw(REG_DEV_ARMVER_CODE));
 178              		.loc 1 52 0
 179 001c 014CE0E3 		mvn	r4, #256
  51:calypso/misc.c **** 	printf("Device Version code: 0x%04x\n", readw(REG_DEV_VER_CODE));
 180              		.loc 1 51 0
 181 0020 FEFFFFEB 		bl	printf
 182              		.loc 1 52 0
 183 0024 BF1F54E1 		ldrh	r1, [r4, #-255]
 184 0028 4C009FE5 		ldr	r0, .L14+12
 185 002c FEFFFFEB 		bl	printf
  53:calypso/misc.c **** 	printf("cDSP ID code: 0x%04x\n", readw(REG_cDSP_ID_CODE));
 186              		.loc 1 53 0
 187 0030 BD1F54E1 		ldrh	r1, [r4, #-253]
 188 0034 44009FE5 		ldr	r0, .L14+16
  54:calypso/misc.c **** 	puts("Die ID code: ");
  55:calypso/misc.c **** 	for (i = 0; i < 64/8; i += 4)
  56:calypso/misc.c **** 		printf("%08x", readl(REG_DIE_ID_CODE+i));
 189              		.loc 1 56 0
 190 0038 44409FE5 		ldr	r4, .L14+20
  53:calypso/misc.c **** 	printf("cDSP ID code: 0x%04x\n", readw(REG_cDSP_ID_CODE));
 191              		.loc 1 53 0
 192 003c FEFFFFEB 		bl	printf
 193              		.loc 1 56 0
 194 0040 0158E0E3 		mvn	r5, #65536
  54:calypso/misc.c **** 	puts("Die ID code: ");
 195              		.loc 1 54 0
 196 0044 3C009FE5 		ldr	r0, .L14+24
 197 0048 FEFFFFEB 		bl	puts
 198              	.LVL8:
 199              		.loc 1 56 0
 200 004c EF1F15E5 		ldr	r1, [r5, #-4079]
 201 0050 0400A0E1 		mov	r0, r4
 202 0054 FEFFFFEB 		bl	printf
 203              	.LVL9:
 204 0058 EB1F15E5 		ldr	r1, [r5, #-4075]
 205 005c 0400A0E1 		mov	r0, r4
 206 0060 FEFFFFEB 		bl	printf
 207              	.LVL10:
  57:calypso/misc.c **** 	putchar('\n');
 208              		.loc 1 57 0
 209 0064 0A00A0E3 		mov	r0, #10
  58:calypso/misc.c **** }
 210              		.loc 1 58 0
 211 0068 3040BDE8 		ldmfd	sp!, {r4, r5, lr}
  57:calypso/misc.c **** 	putchar('\n');
 212              		.loc 1 57 0
 213 006c FEFFFFEA 		b	sercomm_putchar
 214              	.L15:
 215              		.align	2
 216              	.L14:
 217 0070 FFF0FEFF 		.word	-69377
 218 0074 89000000 		.word	.LC8
 219 0078 A1000000 		.word	.LC9
 220 007c BE000000 		.word	.LC10
 221 0080 D3000000 		.word	.LC11
 222 0084 F7000000 		.word	.LC13
 223 0088 E9000000 		.word	.LC12
 224              		.cfi_endproc
 225              	.LFE2:
 227              		.section	.rodata.str1.1,"aMS",%progbits,1
 228              	.LC0:
 229 0000 2000     		.ascii	" \000"
 230              	.LC1:
 231 0002 00       		.ascii	"\000"
 232              	.LC2:
 233 0003 25303858 		.ascii	"%08X: \000"
 233      3A2000
 234              	.LC3:
 235 000a 25303858 		.ascii	"%08X %s\000"
 235      20257300 
 236              	.LC4:
 237 0012 44756D70 		.ascii	"Dump 64kBits of internal ROM\012\000"
 237      2036346B 
 237      42697473 
 237      206F6620 
 237      696E7465 
 238              	.LC5:
 239 0030 44756D70 		.ascii	"Dump 8Mbits of external flash\012\000"
 239      20384D62 
 239      69747320 
 239      6F662065 
 239      78746572 
 240              	.LC6:
 241 004f 44756D70 		.ascii	"Dump 2Mbits of internal RAM\012\000"
 241      20324D62 
 241      69747320 
 241      6F662069 
 241      6E746572 
 242              	.LC7:
 243 006c 44756D70 		.ascii	"Dump 2Mbits of external RAM\012\000"
 243      20324D62 
 243      69747320 
 243      6F662065 
 243      78746572 
 244              	.LC8:
 245 0089 44657669 		.ascii	"Device ID code: 0x%04x\012\000"
 245      63652049 
 245      4420636F 
 245      64653A20 
 245      30782530 
 246              	.LC9:
 247 00a1 44657669 		.ascii	"Device Version code: 0x%04x\012\000"
 247      63652056 
 247      65727369 
 247      6F6E2063 
 247      6F64653A 
 248              	.LC10:
 249 00be 41524D20 		.ascii	"ARM ID code: 0x%04x\012\000"
 249      49442063 
 249      6F64653A 
 249      20307825 
 249      3034780A 
 250              	.LC11:
 251 00d3 63445350 		.ascii	"cDSP ID code: 0x%04x\012\000"
 251      20494420 
 251      636F6465 
 251      3A203078 
 251      25303478 
 252              	.LC12:
 253 00e9 44696520 		.ascii	"Die ID code: \000"
 253      49442063 
 253      6F64653A 
 253      2000
 254              	.LC13:
 255 00f7 25303878 		.ascii	"%08x\000"
 255      00
 256              		.text
 257              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 misc.c
     /tmp/ccREUOev.s:12     .text.memdump_range:0000000000000000 $a
     /tmp/ccREUOev.s:15     .text.memdump_range:0000000000000000 memdump_range
     /tmp/ccREUOev.s:92     .text.memdump_range:000000000000006c $d
     /tmp/ccREUOev.s:100    .text.dump_mem:0000000000000000 $a
     /tmp/ccREUOev.s:103    .text.dump_mem:0000000000000000 dump_mem
     /tmp/ccREUOev.s:147    .text.dump_mem:0000000000000058 $d
     /tmp/ccREUOev.s:155    .text.dump_dev_id:0000000000000000 $a
     /tmp/ccREUOev.s:158    .text.dump_dev_id:0000000000000000 dump_dev_id
     /tmp/ccREUOev.s:217    .text.dump_dev_id:0000000000000070 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
printf
sercomm_putchar
puts
